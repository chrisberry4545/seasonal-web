{"version":3,"sources":["components-elements/BackgroundImageWithLoadingSpinner/BackgroundImageWithLoadingSpinner.tsx","components-elements/Buttons/BareButton.tsx","components-elements/Buttons/PrimaryButton.tsx","components-elements/Icons/BurgerIcon.tsx","components-elements/Icons/CrossIcon.tsx","components-elements/Icons/MagnifyingGlassIcon.tsx","components-elements/Input/Input.tsx","components-elements/LoadingSpinner/LoadingSpinner.tsx","components-elements/Text/TextHeadingLarge.tsx","components-elements/Text/TextHeadingSmall.tsx","components-elements/Text/TextMedium.tsx","components-elements/index.ts","components-layout/index.ts","services/image-loader.service.ts","components-layout/ImageGridItem/ImageGridItem.tsx","components-layout/SummaryColumn/index.ts","helpers/Animations/animations.const.ts","helpers/Animations/fade.animations.ts","helpers/index.ts","components-layout/ImageGrid/ImageGrid.tsx","components-layout/SummaryColumn/SummaryColumn.tsx","components-layout/SummaryColumnList/index.ts","components-layout/SummaryColumnList/SummaryColumnList.tsx","components-main/AboutEatSeasonal/AboutEatSeasonal.tsx","components-main/AndroidAppDownload/AndroidAppDownload.tsx","components-main/BottomTabs/BottomTabs.tsx","store/actions/all-basic-season-data.actions.ts","store/actions/current-season-data.actions.ts","store/actions/init.actions.ts","store/actions/route.actions.ts","store/actions/ui.actions.ts","const/tabs.enum.ts","store/selectors/all-season-data.selectors.ts","store/selectors/current-season-data.selectors.ts","const/urls.const.ts","store/selectors/ui.selectors.ts","store/selectors/combined-selectors/current-season-data-with-search.selectors.ts","config/index.ts","store/epics/tracking.epics.ts","store/epics/index.ts","store/epics/init.epics.ts","store/epics/current-season-data.epics.ts","services/retrieve-backend-data.ts","store/epics/all-basic-season-data.epics.ts","store/epics/route.epics.ts","store/reducers/current-season-data.reducer.ts","store/reducers/all-basic-season-data.reducer.ts","store/reducers/ui.reducer.ts","store/reducers/index.ts","components-main/BottomTabs/BottomTabs.connector.ts","components-main/CurrentSeasonName/CurrentSeasonName.connector.ts","components-main/CurrentSeasonName/CurrentSeasonName.tsx","components-main/FoodTable/FoodTable.connector.ts","components-main/FoodTable/FoodTable.tsx","components-main/Header/Header.connector.ts","components-main/Header/Header.tsx","components-main/SearchBar/SearchBar.tsx","components-main/SearchBar/SearchBar.connector.ts","components-main/SeasonMenu/SeasonMenu.tsx","components-main/SeasonMenu/SeasonMenu.connector.ts","components-main/ViewWebAppVersion/ViewWebAppVersion.connector.ts","components-main/ViewWebAppVersion/ViewWebAppVersion.tsx","components-main/ViewAppLinks/ViewAppLinks.tsx","components-main/WhyEatSeasonal/WhyEatSeasonal.tsx","components-pages/FoodPage/FoodPage.tsx","components-pages/IntroPage/IntroPage.tsx","components-app/App.tsx","serviceWorker.js","index.tsx"],"names":["FadeInOutAnimation","fadeInOutAnimation","BackgroundImageWithLoadingSpinner","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isVisible","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","loadImage","src","setState","stop","apply","arguments","react_default","createElement","react_pose_es","className","style","backgroundImage","concat","children","LoadingSpinner_LoadingSpinner_LoadingSpinner","Component","BareButton","_ref","onClick","PrimaryButton","BurgerIcon","viewBox","height","width","y","CrossIcon","points","MagnifyingGlassIcon","d","Input","_ref$type","type","placeholder","onChange","_onChange","_x","toString","event","target","LoadingSpinner","TextHeadingLarge","TextHeadingSmall","TextMedium","__webpack_require__","__webpack_exports__","BackgroundImageWithLoadingSpinner_BackgroundImageWithLoadingSpinner_BackgroundImageWithLoadingSpinner","BareButton_BareButton","PrimaryButton_PrimaryButton","BurgerIcon_BurgerIcon","CrossIcon_CrossIcon","MagnifyingGlassIcon_MagnifyingGlassIcon","Input_Input_Input","TextHeadingLarge_TextHeadingLarge","TextHeadingSmall_TextHeadingSmall","TextMedium_TextMedium","_ImageGrid_ImageGrid__WEBPACK_IMPORTED_MODULE_1__","_SummaryColumn__WEBPACK_IMPORTED_MODULE_2__","o","_SummaryColumnList__WEBPACK_IMPORTED_MODULE_3__","loadingImages","imageSrc","Promise","resolve","image","document","push","addEventListener","createImageOnLoadPromise","ImageGridItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_elements__WEBPACK_IMPORTED_MODULE_2__","imageUrlSmall","name","_SummaryColumn__WEBPACK_IMPORTED_MODULE_0__","_SummaryColumn_interface__WEBPACK_IMPORTED_MODULE_1__","length","undefined","_ref$enterDelay","enterDelay","_ref$exitDelay","exitDelay","_ref$enterDuration","enterDuration","_ref$exitDuration","exitDuration","posed","enter","delay","opacity","transition","duration","exit","fade_animations_fadeInOutAnimation","ImageGrid","_ImageGridItem_ImageGridItem__WEBPACK_IMPORTED_MODULE_2__","_components_elements__WEBPACK_IMPORTED_MODULE_3__","data","map","item","SummaryColumn","imageUrl","text","title","_SummaryColumnList_interface__WEBPACK_IMPORTED_MODULE_0__","_SummaryColumnList__WEBPACK_IMPORTED_MODULE_1__","SummaryColumnList","columns","column","index","assign","AboutEatSeasonal","objectDestructuringEmpty","components_elements","AndroidAppDownload","href","alt","addTabClasses","isSelected","SET_ALL_BASIC_SEASON_DATA_START","SET_ALL_BASIC_SEASON_DATA_SUCCESS","SET_CURRENT_SEASON_DATA_START","SET_CURRENT_SEASON_DATA_SUCCESS","INIT_APP","GO_TO_WEB_VERSION","OPEN_MENU","CLOSE_MENU","SELECT_SEASON","GO_TO_FOOD_TAB","GO_TO_RECIPES_TABS","SEARCH_BAR_CHANGED","SHOW_SEARCH_BAR","HIDE_SEARCH_BAR","TABS","selectAllBasicSeasonDataState","allBasicSeasonData","selectIsBasicSeasonDataLoading","createSelector","isLoading","selectAllBasicSeasonData","selectCurrentSeasonDataState","currentSeasonData","selectIsCurrentSeasonLoading","selectCurrentSeason","selectCurrentSeasonFood","currentSeason","food","selectCurrentSeasonRecipes","recipes","selectCurrentSeasonIndex","currentSeasonIndex","selectCurrentSeasonName","selectUiState","ui","selectIsMenuOpen","uiState","isMenuOpen","selectCurrentTab","currentTab","selectIsCurrentTabFood","FOOD","selectIsCurrentTabRecipes","RECIPES","selectCurrentSearchTerm","searchTerm","toLowerCase","selectIsSearchBarVisible","isSearchBarVisible","getDataThatContainsSearchTerm","filter","includes","selectVisibleFoodData","selectVisibleRecipeData","BACKEND_URL","process","SEASON_DATA_URL","ACTIONS_TO_TRACK","rootEpic","combineEpics","of","pipe","mapTo","actions$","ofType","state$","withLatestFrom","slicedToArray","switchMap","seasonIndex","fetch","then","resp","json","getSeasonDataBySeasonIndex","foodData","seasonData","setAllBasicSeasonDataSuccess","_ref2","ga","ignoreElements","getDefaultState","Date","getUTCMonth","epicMiddleware","createEpicMiddleware","storeHistory","createHashHistory","store","createStore","combineReducers","action","objectSpread","router","connectRouter","newSearchTerm","compose","applyMiddleware","routerMiddleware","run","BottomTabsConnecter","connect","isCurrentTabFood","isCurrentTabRecipes","dispatch","goToFoodTab","goToRecipesTab","CurrentSeasonNameConnecter","currentSeasonName","FoodTableConnecter","components_layout","HeaderConnecter","onMenuOpen","SearchBarConnecter","getSearchBarClassName","onHideSearchBar","onSearchChanged","searchBarChanged","onShowSearchBar","ref","input","querySelector","focus","focusOnInputIfSearchVisible","OverlayFadeInOutAnimation","SeasonMenuConnecter","onClose","onSeasonSelected","selectSeason","ViewWebAppVersionConnector","onGoToWebVersion","ViewAppLinks","AndroidAppDownload_AndroidAppDownload_AndroidAppDownload","summaryColumns","WhyEatSeasonal","FoodPage","IntroPage","ViewAppLinks_ViewAppLinks_ViewAppLinks","AboutEatSeasonal_AboutEatSeasonal_AboutEatSeasonal","WhyEatSeasonal_WhyEatSeasonal_WhyEatSeasonal","App","es","esm","history","react_router","path","component","exact","Boolean","window","location","hostname","match","rootElement","getElementById","hasChildNodes","hydrate","App_App","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.030ff23b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './BackgroundImageWithLoadingSpinner.scss';\n\nimport {\n  loadImage\n} from '../../services/image-loader.service';\n\nimport {\n  LoadingSpinner\n} from '../../components-elements';\n\nimport {\n  fadeInOutAnimation\n} from '../../helpers';\n\nimport { PoseGroup } from 'react-pose';\n\nconst FadeInOutAnimation = fadeInOutAnimation();\n\ninterface IBackgroundImageWithLoadingSpinnerPropsInterface {\n  src: string;\n}\ninterface IBackgroundImageWithLoadingSpinnerStateInterface {\n  isVisible: boolean;\n}\n\nexport class BackgroundImageWithLoadingSpinner\nextends Component<\n  IBackgroundImageWithLoadingSpinnerPropsInterface,\n  IBackgroundImageWithLoadingSpinnerStateInterface\n> {\n  constructor(props: IBackgroundImageWithLoadingSpinnerPropsInterface) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n  }\n\n  public async componentDidMount() {\n    await loadImage(this.props.src);\n    this.setState({\n      isVisible: true\n    });\n  }\n\n  public render() {\n    return (\n      <PoseGroup>\n        {\n          this.state.isVisible\n            ? <FadeInOutAnimation key='background-image-fade-in-out'\n              className='c-background-image-with-loading-spinner'\n              style={{ backgroundImage: `url(${this.props.src})` }}>\n              { this.props.children }\n            </FadeInOutAnimation>\n            : <FadeInOutAnimation key='loading-spinner-fade-in-out'\n              className='c-background-image-with-loading-spinner'>\n              <LoadingSpinner />\n            </FadeInOutAnimation>\n        }\n      </PoseGroup>\n    );\n  }\n}\n","import React, { SFC } from 'react';\nimport './BareButton.scss';\n\nexport const BareButton: SFC<{\n  className?: string,\n  onClick?: () => void\n}> = ({\n  className,\n  children,\n  onClick\n}) => (\n  <button className={`${(className || '')} c-bare-button`} onClick={onClick}>\n    { children }\n  </button>\n);\n","import React, { SFC } from 'react';\nimport './PrimaryButton.scss';\n\nexport const PrimaryButton: SFC<{\n  className?: string,\n  onClick?: () => void\n}> = ({\n  className,\n  children,\n  onClick\n}) => (\n  <button className={`${(className || '')} c-primary-button`}\n    onClick={onClick}>\n    { children }\n  </button>\n);\n","import React from 'react';\nimport './icon.scss';\n\nexport const BurgerIcon = () => (\n  <svg viewBox='0 0 24 24' className='c-icon'>\n    <rect height='2' width='24' y='5'></rect>\n    <rect height='2' width='24' y='11'></rect>\n    <rect height='2' width='24' y='17'></rect>\n  </svg>\n);\n","import React from 'react';\nimport './icon.scss';\n\nexport const CrossIcon = () => (\n  <svg className='c-icon' viewBox='0 0 24 24'>\n    {/* tslint:disable-next-line */}\n    <polygon points='19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12' />\n  </svg>\n);\n","import React from 'react';\nimport './icon.scss';\n\nexport const MagnifyingGlassIcon = () => (\n  <svg className='c-icon' viewBox='0 0 32 32'>\n    {/* tslint:disable-next-line */}\n    <path d='M19.4271164,21.4271164 C18.0372495,22.4174803 16.3366522,23 14.5,23 C9.80557939,23 6,19.1944206 6,14.5 C6,9.80557939 9.80557939,6 14.5,6 C19.1944206,6 23,9.80557939 23,14.5 C23,16.3366522 22.4174803,18.0372495 21.4271164,19.4271164 L27.0119176,25.0119176 C27.5621186,25.5621186 27.5575313,26.4424687 27.0117185,26.9882815 L26.9882815,27.0117185 C26.4438648,27.5561352 25.5576204,27.5576204 25.0119176,27.0119176 L19.4271164,21.4271164 L19.4271164,21.4271164 Z M14.5,21 C18.0898511,21 21,18.0898511 21,14.5 C21,10.9101489 18.0898511,8 14.5,8 C10.9101489,8 8,10.9101489 8,14.5 C8,18.0898511 10.9101489,21 14.5,21 L14.5,21 Z' />\n  </svg>\n);\n","import React, { SFC } from 'react';\nimport './Input.scss';\n\nexport const Input: SFC<{\n  className?: string,\n  type?: 'text' | 'number',\n  placeholder?: string,\n  onChange: (newValue: string) => void\n}> = ({\n  children,\n  className,\n  type = 'text',\n  placeholder,\n  onChange\n}) => (\n  <input\n    className={`${(className || '')} c-input`}\n    placeholder={placeholder}\n    type={type}\n    onChange={(event) => onChange(event.target.value)}>\n    { children }\n  </input>\n);\n","import React from 'react';\n\nimport './LoadingSpinner.scss';\n\nexport const LoadingSpinner = () => (\n  <div className='c-loading-spinner'>\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n  </div>\n);\n","import React, { SFC } from 'react';\nimport './TextHeadingLarge.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextHeadingLarge: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-large`}>\n    { children }\n  </span>\n);\n","import React, { SFC } from 'react';\nimport './TextHeadingSmall.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextHeadingSmall: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-small`}>\n    { children }\n  </span>\n);\n","import React, { SFC } from 'react';\nimport './TextMedium.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextMedium: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-medium`}>\n    { children }\n  </span>\n);\n","export * from './BackgroundImageWithLoadingSpinner/BackgroundImageWithLoadingSpinner';\n\nexport * from './Buttons';\n\nexport * from './Icons';\n\nexport * from './Input';\n\nexport * from './LoadingSpinner/LoadingSpinner';\n\nexport * from './Text';\n","export * from './ImageGridItem/ImageGridItem';\n\nexport * from './ImageGrid/ImageGrid';\n\nexport * from './SummaryColumn';\n\nexport * from './SummaryColumnList';\n","const loadingImages = [];\n\nconst createImageOnLoadPromise = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  return new Promise((resolve) => {\n    const image = document.createElement('img');\n    image.src = imageSrc;\n    loadingImages.push(image);\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n  });\n};\n\nexport const loadImage = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  const onLoadPromise = createImageOnLoadPromise(imageSrc);\n  return onLoadPromise;\n};\n","import React, { SFC } from 'react';\n\nimport './ImageGridItem.scss';\n\nimport {\n  TextMedium\n} from '../../components-elements';\n\nimport {\n  BackgroundImageWithLoadingSpinner\n} from '../../components-elements';\nimport { ImageGridItemProps } from './ImageGridItem.interface';\n\nexport const ImageGridItem: SFC<ImageGridItemProps> = ({\n  imageUrlSmall,\n  name\n}) => (\n  <div className='c-image-grid-item'>\n    <div className='c-image-grid-item__inner'>\n      <div className='c-image-grid-item__image'>\n        <BackgroundImageWithLoadingSpinner src={imageUrlSmall}/>\n      </div>\n      <TextMedium className='c-image-grid-item__text'>\n        {name}\n      </TextMedium>\n    </div>\n  </div>\n);\n","export * from './SummaryColumn';\n\nexport * from './SummaryColumn.interface';\n","export const DEFAULT_ANIMATION_TIME = 500;\n","import posed from 'react-pose';\n\nimport {\n  DEFAULT_ANIMATION_TIME\n} from './animations.const';\n\nexport const fadeInOutAnimation = ({\n  enterDelay = 0,\n  exitDelay = 0,\n  enterDuration = DEFAULT_ANIMATION_TIME,\n  exitDuration = DEFAULT_ANIMATION_TIME,\n  type = 'div'\n} = {}) => posed[type]({\n  enter: {\n    delay: enterDelay,\n    opacity: 1,\n    transition: {\n      duration: enterDuration\n    }\n  },\n  exit: {\n    delay: exitDelay,\n    opacity: 0,\n    transition: {\n      duration: exitDuration\n    }\n  }\n});\n","export * from './Animations';\n","import React, { SFC } from 'react';\n\nimport './ImageGrid.scss';\n\nimport {\n  ImageGridItem\n} from '../ImageGridItem/ImageGridItem';\nimport { ImageGridProps } from './ImageGrid.interface';\nimport { TextMedium } from '../../components-elements';\n\nexport const ImageGrid: SFC<ImageGridProps> = ({ data }) => (\n  <div className='c-image-grid'>\n    {\n      data && data.length\n        ? data.map((item) => (\n          <ImageGridItem\n            key={item.name}\n            imageUrlSmall={item.imageUrlSmall}\n            name={item.name} />\n        ))\n        : <TextMedium className='c-image-grid__no-results'>\n            No results found\n          </TextMedium>\n    }\n  </div>\n);\n","import React, { SFC } from 'react';\n\nimport './SummaryColumn.scss';\n\nimport {\n  TextMedium,\n  TextHeadingSmall\n} from '../../components-elements';\n\nimport {\n  ISummaryColumn\n} from './SummaryColumn.interface';\n\nexport const SummaryColumn: SFC<ISummaryColumn> = ({\n  imageUrl,\n  text,\n  title\n}) => (\n  <div className='c-summary-column'>\n    {\n      imageUrl && <img src={imageUrl} className='c-summary-column__image' />\n    }\n    <h3 className='c-summary-column__heading'>\n      <TextHeadingSmall>\n        { title }\n      </TextHeadingSmall>\n    </h3>\n    <TextMedium>\n      { text }\n    </TextMedium>\n  </div>\n);\n","export * from './SummaryColumnList.interface';\n\nexport * from './SummaryColumnList';\n","import React, { SFC } from 'react';\n\nimport './SummaryColumnList.scss';\n\nimport {\n  SummaryColumn\n} from './../SummaryColumn';\n\nimport {\n  ISummaryColumnList\n} from './SummaryColumnList.interface';\n\nexport const SummaryColumnList: SFC<ISummaryColumnList> = ({\n  columns\n}) => (\n  <ul className='c-summary-column-list'>\n    {\n      columns.map((column, index) => (\n        <SummaryColumn {...column} key={index} />\n      ))\n    }\n  </ul>\n);\n","import React, { SFC } from 'react';\n\nimport './AboutEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge,\n  TextMedium\n} from '../../components-elements';\n\nexport const AboutEatSeasonal: SFC<{}> = ({}) => (\n  <div className='c-about-eat-seasonal'>\n    <h2 className='c-about-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        About Eat Seasonal\n      </TextHeadingLarge>\n    </h2>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        Eat Seasonal started because we wanted a way to easily see what fruit\n        and vegetables are in seasons. Walking around a supermarket, trying to\n        plan seasonal meals becomes much easier when you can quickly access\n        information on everything that's in season through your phone.\n      </TextMedium>\n    </p>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        The app and website give you quick and simple view of all the food\n        currently in seasons. They also provide a recipes section including\n        carefully selected recipes which use ingredients which are mostly in\n        seasons. New recipes are being added all the time!\n      </TextMedium>\n    </p>\n  </div>\n);\n","import React, { SFC } from 'react';\n\nimport './AndroidAppDownload.scss';\n\nexport const AndroidAppDownload: SFC<{}> = () => (\n  <a className='c-android-app-download'\n    href={\n    'https://play.google.com/store/apps/details?id=com.chrisbdev.seasonal&p' +\n      'campaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'\n  }>\n    <img className='c-android-app-download__image'\n      alt='Get it on Google Play'\n      src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png'/>\n  </a>\n);\n","import React, { SFC } from 'react';\n\nimport './BottomTabs.scss';\n\nimport {\n  BareButton\n} from '../../components-elements';\nimport { IBottomTabProps } from './BottomTabs.interface';\n\nconst addTabClasses = (isSelected: boolean) => (\n  `c-bottom-tabs__tab ${\n    isSelected\n      ? ' c-bottom-tabs__tab--selected'\n      : ''\n  }`\n);\n\nexport const BottomTabs: SFC<IBottomTabProps> = ({\n  isCurrentTabFood,\n  isCurrentTabRecipes,\n  goToFoodTab,\n  goToRecipesTab\n}) => (\n  <nav className='c-bottom-tabs'>\n    <BareButton\n      className={addTabClasses(isCurrentTabFood)}\n      onClick={goToFoodTab}>\n      Food\n    </BareButton>\n    <BareButton\n      className={addTabClasses(isCurrentTabRecipes)}\n      onClick={goToRecipesTab}>\n      Recipes\n    </BareButton>\n  </nav>\n);\n","import { Action } from 'redux';\nimport { IBaseSeason } from '@chrisb-dev/seasonal-shared';\n\nexport const SET_ALL_BASIC_SEASON_DATA_START =\n  'SET_ALL_BASIC_SEASON_DATA_START';\nexport function setAllBasicSeasonDataStart(): Action {\n  return {\n    type: SET_ALL_BASIC_SEASON_DATA_START\n  };\n}\n\nexport interface ISetAllBasicSeasonDataSuccess extends Action {\n  seasonData: IBaseSeason[];\n}\nexport const SET_ALL_BASIC_SEASON_DATA_SUCCESS =\n  'SET_ALL_BASIC_SEASON_DATA_SUCCESS';\nexport function setAllBasicSeasonDataSuccess(\n  seasonData: IBaseSeason[]\n): ISetAllBasicSeasonDataSuccess {\n  return {\n    seasonData,\n    type: SET_ALL_BASIC_SEASON_DATA_SUCCESS\n  };\n}\n","import { IHydratedSeason } from '@chrisb-dev/seasonal-shared';\nimport { Action } from 'redux';\n\nexport const SET_CURRENT_SEASON_DATA_START = 'SET_CURRENT_SEASON_DATA_START';\nexport function setCurrentSeasonDataStart(): Action {\n  return {\n    type: SET_CURRENT_SEASON_DATA_START\n  };\n}\n\nexport interface ISetCurrentSeasonDataSuccess extends Action {\n  currentSeasonData: IHydratedSeason;\n}\nexport const SET_CURRENT_SEASON_DATA_SUCCESS =\n  'SET_CURRENT_SEASON_DATA_SUCCESS';\nexport function setCurrentSeasonDataSuccess(\n  currentSeasonData: IHydratedSeason\n): ISetCurrentSeasonDataSuccess {\n  return {\n    currentSeasonData,\n    type: SET_CURRENT_SEASON_DATA_SUCCESS\n  };\n}\n","import { Action } from 'redux';\n\nexport const INIT_APP = 'INIT_APP';\nexport function initApp(): Action {\n  return {\n    type: INIT_APP\n  };\n}\n","import { Action } from 'redux';\n\nexport const GO_TO_WEB_VERSION = 'GO_TO_WEB_VERSION';\nexport function goToWebVersion(): Action {\n  return {\n    type: GO_TO_WEB_VERSION\n  };\n}\n","import { Action } from 'redux';\n\nexport const OPEN_MENU = 'OPEN_MENU';\nexport function openMenu(): Action {\n  return {\n    type: OPEN_MENU\n  };\n}\n\nexport const CLOSE_MENU = 'CLOSE_MENU';\nexport function closeMenu(): Action {\n  return {\n    type: CLOSE_MENU\n  };\n}\n\nexport interface ISelectSeason extends Action {\n  seasonIndex: number;\n}\nexport const SELECT_SEASON = 'SELECT_SEASON';\nexport function selectSeason(\n  seasonIndex: number\n): ISelectSeason {\n  return {\n    seasonIndex,\n    type: SELECT_SEASON\n  };\n}\n\nexport const GO_TO_FOOD_TAB = 'GO_TO_FOOD_TAB';\nexport function goToFoodTab(): Action {\n  return {\n    type: GO_TO_FOOD_TAB\n  };\n}\n\nexport const GO_TO_RECIPES_TABS = 'GO_TO_RECIPES_TABS';\nexport function goToRecipesTab(): Action {\n  return {\n    type: GO_TO_RECIPES_TABS\n  };\n}\n\nexport interface ISearchBarChanged extends Action {\n  newSearchTerm: string;\n}\nexport const SEARCH_BAR_CHANGED = 'SEARCH_BAR_CHANGED';\nexport function searchBarChanged(\n  newSearchTerm: string\n): ISearchBarChanged {\n  return {\n    newSearchTerm,\n    type: SEARCH_BAR_CHANGED\n  };\n}\n\nexport const SHOW_SEARCH_BAR = 'SHOW_SEARCH_BAR';\nexport function showSearchBar(): Action {\n  return {\n    type: SHOW_SEARCH_BAR\n  };\n}\n\nexport const HIDE_SEARCH_BAR = 'HIDE_SEARCH_BAR';\nexport function hideSearchBar(): Action {\n  return {\n    type: HIDE_SEARCH_BAR\n  };\n}\n","export enum TABS {\n  FOOD,\n  RECIPES\n}\n","\nimport { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\nimport { IBaseSeason } from '@chrisb-dev/seasonal-shared';\n\nconst selectAllBasicSeasonDataState = (\n  state: IState\n) => state.allBasicSeasonData;\n\nexport const selectIsBasicSeasonDataLoading = createSelector(\n  selectAllBasicSeasonDataState,\n  (allBasicSeasonData): boolean => allBasicSeasonData.isLoading\n);\n\nexport const selectAllBasicSeasonData = createSelector(\n  selectAllBasicSeasonDataState,\n  (allBasicSeasonData): IBaseSeason[] | undefined => allBasicSeasonData.data\n);\n","import { createSelector } from 'reselect';\nimport {\n  IState\n} from '../../interfaces';\nimport {\n  IHydratedSeason,\n  IFood,\n  IRecipe\n} from '@chrisb-dev/seasonal-shared';\n\nconst selectCurrentSeasonDataState = (state: IState) => state.currentSeasonData;\n\nexport const selectIsCurrentSeasonLoading = createSelector(\n  selectCurrentSeasonDataState,\n  (currentSeasonData): boolean => currentSeasonData.isLoading\n);\n\nexport const selectCurrentSeason = createSelector(\n  selectCurrentSeasonDataState,\n  (currentSeasonData): IHydratedSeason | undefined => currentSeasonData.data\n);\n\nexport const selectCurrentSeasonFood = createSelector(\n  selectCurrentSeason,\n  (currentSeason): IFood[] | undefined => currentSeason && currentSeason.food\n);\n\nexport const selectCurrentSeasonRecipes = createSelector(\n  selectCurrentSeason,\n  (currentSeason): IRecipe[] | undefined => currentSeason &&\n    currentSeason.recipes\n);\n\nexport const selectCurrentSeasonIndex = createSelector(\n  selectCurrentSeasonDataState,\n  (currentSeasonData) => currentSeasonData.currentSeasonIndex\n);\n\nexport const selectCurrentSeasonName = createSelector(\n  selectCurrentSeason,\n  (currentSeason): string | undefined => currentSeason && currentSeason.name\n);\n","export const LANDING_URL = '/';\nexport const FOOD_URL = '/food';\n","import { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\nimport { TABS } from '../../const';\n\nconst selectUiState = (state: IState) => state.ui;\n\nexport const selectIsMenuOpen = createSelector(\n  selectUiState,\n  (uiState): boolean => uiState.isMenuOpen\n);\n\nexport const selectCurrentTab = createSelector(\n  selectUiState,\n  (uiState): TABS => uiState.currentTab\n);\n\nexport const selectIsCurrentTabFood = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.FOOD\n);\n\nexport const selectIsCurrentTabRecipes = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.RECIPES\n);\n\nexport const selectCurrentSearchTerm = createSelector(\n  selectUiState,\n  (uiState): string | undefined => uiState.searchTerm &&\n    uiState.searchTerm.toLowerCase()\n);\n\nexport const selectIsSearchBarVisible = createSelector(\n  selectUiState,\n  (uiState): boolean => uiState.isSearchBarVisible\n);\n","\nimport { createSelector } from 'reselect';\nimport { selectCurrentSearchTerm } from '../ui.selectors';\nimport { selectCurrentSeasonFood, selectCurrentSeasonRecipes } from '../current-season-data.selectors';\nimport { IFood, IRecipe } from '@chrisb-dev/seasonal-shared';\n\nconst getDataThatContainsSearchTerm = <T extends { name: string }>(\n  searchTerm: string | undefined,\n  data: T[] | undefined\n) => data && data.filter(({ name }) => (\n  !searchTerm || name.toLowerCase().includes(searchTerm)\n));\n\nexport const selectVisibleFoodData = createSelector(\n  selectCurrentSearchTerm,\n  selectCurrentSeasonFood,\n  (searchTerm, food): IFood[] | undefined => getDataThatContainsSearchTerm(\n    searchTerm,\n    food\n  )\n);\n\nexport const selectVisibleRecipeData = createSelector(\n  selectCurrentSearchTerm,\n  selectCurrentSeasonRecipes,\n  (searchTerm, recipes): IRecipe[] | undefined => getDataThatContainsSearchTerm(\n    searchTerm,\n    recipes\n  )\n);\n","const BACKEND_URL = process.env.BACKEND_URL\n    || 'https://6usraevcmc.execute-api.eu-west-2.amazonaws.com/prod';\n\nexport const SEASON_DATA_URL =\n  process.env.SEASON_DATA_URL || `${BACKEND_URL}/season-data`;\n","import { ActionsObservable } from 'redux-observable';\n\nimport {\n  SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION\n} from '../actions';\n\nimport {\n  map,\n  filter,\n  ignoreElements\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { SeasonalEpic } from './seasonal-epic.type';\n\nconst ACTIONS_TO_TRACK = [\n  SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION\n];\n\nexport const trackActionEpic$: SeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    filter(({ type }) => ACTIONS_TO_TRACK.includes(type)),\n    map(({ type }) => ga('send', 'event', type, type)),\n    ignoreElements()\n  )\n);\n","import { combineEpics } from 'redux-observable';\n\nimport {\n  getCurrentSeasonDataStartEpic$,\n  getCurrentSeasonDataEpic$\n} from './current-season-data.epics';\n\nimport { initAppEpic$ } from './init.epics';\n\nimport {\n  getAllBasicSeasonDataStartEpic$,\n  getAllBasicSeasonDataEpic$\n} from './all-basic-season-data.epics';\nimport { trackActionEpic$ } from './tracking.epics';\n\nimport {\n  goToWebVersion$\n} from './route.epics';\n\nexport const rootEpic = combineEpics(\n  initAppEpic$,\n  getCurrentSeasonDataStartEpic$,\n  getCurrentSeasonDataEpic$,\n  getAllBasicSeasonDataStartEpic$,\n  getAllBasicSeasonDataEpic$,\n  trackActionEpic$,\n  goToWebVersion$\n);\n","import {\n  initApp\n} from '../actions';\n\nimport {\n  of,\n  Observable\n} from 'rxjs';\n\nimport {\n  mapTo\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { SeasonalEpic } from './seasonal-epic.type';\n\nexport const initAppEpic$: SeasonalEpic = (): Observable<Action> => (\n  of(null).pipe(\n    mapTo(initApp())\n  )\n);\n","import { ofType, StateObservable, ActionsObservable } from 'redux-observable';\n\nimport {\n  getSeasonDataBySeasonIndex\n} from '../../services';\n\nimport {\n  INIT_APP,\n  SET_CURRENT_SEASON_DATA_START,\n  setCurrentSeasonDataSuccess,\n  setCurrentSeasonDataStart,\n  SELECT_SEASON\n} from '../actions';\n\nimport {\n  map,\n  switchMap,\n  withLatestFrom,\n  mapTo\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { IState } from '../../interfaces';\nimport { selectCurrentSeasonIndex } from '../selectors';\nimport { Observable } from 'rxjs';\nimport { SeasonalEpic } from './seasonal-epic.type';\n\nexport const getCurrentSeasonDataStartEpic$: SeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      INIT_APP,\n      SELECT_SEASON\n    ),\n    mapTo(setCurrentSeasonDataStart())\n  )\n);\n\nexport const getCurrentSeasonDataEpic$: SeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(SET_CURRENT_SEASON_DATA_START),\n    withLatestFrom(state$),\n    map(([, state]) => selectCurrentSeasonIndex(state)),\n    switchMap((seasonIndex) => getSeasonDataBySeasonIndex(seasonIndex)),\n    map((foodData) => setCurrentSeasonDataSuccess(foodData))\n  )\n);\n","import {\n    SEASON_DATA_URL\n} from '././../config';\nimport { IBaseSeason, IHydratedSeason } from '@chrisb-dev/seasonal-shared';\n\nconst getAllSeasonData = (): Promise<IBaseSeason[]> => {\n  return fetch(SEASON_DATA_URL).then((resp) => resp.json());\n};\n\nconst getSeasonDataBySeasonIndex = (\n  seasonIndex: number\n): Promise<IHydratedSeason> => {\n  return fetch(\n      `${SEASON_DATA_URL}/${seasonIndex}`\n  ).then((resp) => resp.json());\n};\n\nconst getCurrentSeasonIndex = (): number => new Date().getUTCMonth();\n\nexport {\n    getAllSeasonData,\n    getCurrentSeasonIndex,\n    getSeasonDataBySeasonIndex\n};\n","import { ofType, ActionsObservable } from 'redux-observable';\n\nimport {\n  getAllSeasonData\n} from '../../services';\n\nimport {\n  INIT_APP,\n  SET_ALL_BASIC_SEASON_DATA_START,\n  setAllBasicSeasonDataStart,\n  setAllBasicSeasonDataSuccess\n} from '../actions';\n\nimport {\n  map,\n  switchMap,\n  mapTo\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { SeasonalEpic } from './seasonal-epic.type';\n\nexport const getAllBasicSeasonDataStartEpic$: SeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(INIT_APP),\n    mapTo(setAllBasicSeasonDataStart())\n  )\n);\n\nexport const getAllBasicSeasonDataEpic$: SeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(SET_ALL_BASIC_SEASON_DATA_START),\n    switchMap(() => getAllSeasonData()),\n    map((seasonData) => setAllBasicSeasonDataSuccess(seasonData))\n  )\n);\n","import { ActionsObservable, ofType } from 'redux-observable';\nimport {\n  mapTo\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { SeasonalEpic } from './seasonal-epic.type';\nimport { GO_TO_WEB_VERSION } from '../actions';\nimport { push } from 'connected-react-router';\nimport { FOOD_URL } from '../../const';\n\nexport const goToWebVersion$: SeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(GO_TO_WEB_VERSION),\n    mapTo(push(FOOD_URL))\n  )\n);\n","import {\n  SET_CURRENT_SEASON_DATA_START,\n  SET_CURRENT_SEASON_DATA_SUCCESS,\n  ISetCurrentSeasonDataSuccess,\n  SELECT_SEASON,\n  ISelectSeason\n} from '../actions';\nimport { ICurrentSeasonDataState } from '../../interfaces';\nimport { Action } from 'redux';\nimport { getCurrentSeasonIndex } from '../../services';\n\nconst getDefaultState = (): ICurrentSeasonDataState => ({\n  currentSeasonIndex: getCurrentSeasonIndex(),\n  data: undefined,\n  isLoading: true\n});\n\nexport function currentSeasonDataReducer(\n  state = getDefaultState(),\n  action: Action\n): ICurrentSeasonDataState {\n  switch (action.type) {\n    case SET_CURRENT_SEASON_DATA_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case SET_CURRENT_SEASON_DATA_SUCCESS:\n      return {\n        ...state,\n        data: (action as ISetCurrentSeasonDataSuccess).currentSeasonData,\n        isLoading: false\n      };\n    case SELECT_SEASON:\n      return {\n        ...state,\n        currentSeasonIndex: (action as ISelectSeason).seasonIndex\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_ALL_BASIC_SEASON_DATA_START,\n  SET_ALL_BASIC_SEASON_DATA_SUCCESS,\n  ISetAllBasicSeasonDataSuccess\n} from '../actions';\nimport { ISeasonDataState } from '../../interfaces';\nimport { Action } from 'redux';\n\nconst getDefaultState = (): ISeasonDataState => ({\n  data: undefined,\n  isLoading: true\n});\n\nexport function allBasicSeasonDataReducer(\n  state = getDefaultState(),\n  action: Action\n): ISeasonDataState {\n  switch (action.type) {\n    case SET_ALL_BASIC_SEASON_DATA_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case SET_ALL_BASIC_SEASON_DATA_SUCCESS:\n      return {\n        ...state,\n        data: (action as ISetAllBasicSeasonDataSuccess).seasonData,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CLOSE_MENU,\n  OPEN_MENU,\n  SELECT_SEASON,\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  SEARCH_BAR_CHANGED,\n  ISearchBarChanged,\n  SHOW_SEARCH_BAR,\n  HIDE_SEARCH_BAR\n} from '../actions';\nimport { IUiState } from '../../interfaces';\nimport { Action } from 'redux';\nimport { TABS } from '../../const';\n\nconst getDefaultState = (): IUiState => ({\n  currentTab: TABS.FOOD,\n  isMenuOpen: false,\n  isSearchBarVisible: false\n});\n\nexport function uiReducer(\n  state = getDefaultState(),\n  action: Action\n): IUiState {\n  switch (action.type) {\n    case SELECT_SEASON:\n    case CLOSE_MENU:\n      return {\n        ...state,\n        isMenuOpen: false\n      };\n    case OPEN_MENU:\n      return {\n        ...state,\n        isMenuOpen: true\n      };\n    case GO_TO_FOOD_TAB:\n      return {\n        ...state,\n        currentTab: TABS.FOOD\n      };\n    case GO_TO_RECIPES_TABS:\n      return {\n        ...state,\n        currentTab: TABS.RECIPES\n      };\n    case SEARCH_BAR_CHANGED:\n      return {\n        ...state,\n        searchTerm: (action as ISearchBarChanged).newSearchTerm\n      };\n    case SHOW_SEARCH_BAR:\n      return {\n        ...state,\n        isSearchBarVisible: true\n      };\n    case HIDE_SEARCH_BAR:\n      return {\n        ...state,\n        isSearchBarVisible: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  Action,\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose\n} from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport { currentSeasonDataReducer } from './current-season-data.reducer';\n\nimport { allBasicSeasonDataReducer } from './all-basic-season-data.reducer';\n\nimport { uiReducer } from './ui.reducer';\n\nimport {\n  rootEpic\n} from '../epics';\n\nimport { IState } from '../../interfaces';\n\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nconst epicMiddleware = createEpicMiddleware<Action, Action, IState, {}>();\nexport const storeHistory = createHashHistory();\n\nexport const store = createStore(\n  combineReducers<IState>({\n    allBasicSeasonData: allBasicSeasonDataReducer,\n    currentSeasonData: currentSeasonDataReducer,\n    router: connectRouter(storeHistory),\n    ui: uiReducer\n  }),\n  undefined,\n  compose(\n    applyMiddleware(\n      routerMiddleware(storeHistory),\n      epicMiddleware\n    )\n  )\n);\nepicMiddleware.run(rootEpic);\n","import { connect } from 'react-redux';\nimport {\n  BottomTabs\n} from './BottomTabs';\nimport {\n  goToFoodTab,\n  goToRecipesTab,\n  selectIsCurrentTabFood,\n  selectIsCurrentTabRecipes\n} from '../../store';\nimport {\n  IBottomTabDispatchProps,\n  IBottomTabInputProps\n} from './BottomTabs.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): IBottomTabInputProps => ({\n  isCurrentTabFood: selectIsCurrentTabFood(state),\n  isCurrentTabRecipes: selectIsCurrentTabRecipes(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IBottomTabDispatchProps => ({\n  goToFoodTab: () => dispatch(goToFoodTab()),\n  goToRecipesTab: () => dispatch(goToRecipesTab())\n});\n\nexport const BottomTabsConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomTabs);\n","import { connect } from 'react-redux';\nimport {\n  CurrentSeasonName\n} from './CurrentSeasonName';\nimport {\n  selectCurrentSeasonName\n} from '../../store';\nimport {\n  ICurrentSeasonName\n} from './CurrentSeasonName.interface';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): ICurrentSeasonName => ({\n  currentSeasonName: selectCurrentSeasonName(state)\n});\n\nexport const CurrentSeasonNameConnecter = connect(\n  mapStateToProps\n)(CurrentSeasonName);\n","import React, { SFC } from 'react';\n\nimport './CurrentSeasonName.scss';\n\nimport {\n  TextHeadingSmall\n} from '../../components-elements';\nimport { ICurrentSeasonName } from './CurrentSeasonName.interface';\n\nexport const CurrentSeasonName: SFC<ICurrentSeasonName> = ({\n  currentSeasonName\n}) => (\n  <TextHeadingSmall className='c-current-season-name'>\n    {currentSeasonName}\n  </TextHeadingSmall>);\n","import { connect } from 'react-redux';\nimport {\n  FoodTable\n} from './FoodTable';\nimport {\n  selectIsCurrentSeasonLoading,\n  selectVisibleFoodData,\n  selectVisibleRecipeData,\n  selectIsCurrentTabFood\n} from '../../store';\nimport { IState } from '../../interfaces';\nimport { IFoodTableInputProps } from './FoodTable.interface';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodTableInputProps => {\n  return {\n    food: selectVisibleFoodData(state),\n    isCurrentTabFood: selectIsCurrentTabFood(state),\n    isLoading: selectIsCurrentSeasonLoading(state),\n    recipes: selectVisibleRecipeData(state)\n  };\n};\n\nexport const FoodTableConnecter = connect(\n  mapStateToProps\n)(FoodTable);\n","import React from 'react';\n\nimport './FoodTable.scss';\n\nimport {\n  ImageGrid\n} from '../../components-layout';\n\nimport {\n  LoadingSpinner\n} from '../../components-elements';\nimport { IFoodTableInputProps } from './FoodTable.interface';\n\nexport const FoodTable = ({\n  isCurrentTabFood,\n  isLoading,\n  food,\n  recipes\n}: IFoodTableInputProps) => (\n  isLoading\n    ? <div className='c-food-table__loading-spinner-wrapper'>\n      <LoadingSpinner />\n    </div>\n    : isCurrentTabFood\n      ? <ImageGrid data={food} />\n      : <ImageGrid data={recipes} />\n);\n","import { connect } from 'react-redux';\nimport {\n  Header\n} from './Header';\nimport {\n  openMenu\n} from '../../store';\nimport { IHeaderDispatchProps } from './Header.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IHeaderDispatchProps => ({\n  onMenuOpen: () => dispatch(openMenu())\n});\n\nexport const HeaderConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { SFC } from 'react';\n\nimport './Header.scss';\n\nimport {\n  BareButton,\n  BurgerIcon,\n  TextHeadingLarge\n} from '../../components-elements';\nimport {\n  SearchBarConnecter\n} from '../';\nimport { IHeaderDispatchProps } from './Header.interface';\n\nexport const Header: SFC<IHeaderDispatchProps> = ({\n  onMenuOpen\n}) => (\n  <header className='c-header'>\n    <BareButton className='c-header__btn' onClick={onMenuOpen}>\n      <BurgerIcon />\n    </BareButton>\n    <h1 className='c-header__text'>\n      <TextHeadingLarge>\n        Eat Seasonal\n      </TextHeadingLarge>\n    </h1>\n    <SearchBarConnecter />\n  </header>\n);\n","import React, { SFC } from 'react';\n\nimport './SearchBar.scss';\n\nimport { ISearchBarProps } from './SearchBar.interface';\nimport {\n  Input\n} from '../../components-elements';\n\nimport {\n  BareButton,\n  CrossIcon,\n  MagnifyingGlassIcon\n} from '../../components-elements';\n\nconst getSearchBarClassName = (isSearchBarVisible: boolean) => (\n  'c-search-bar' +\n    (\n      isSearchBarVisible\n        ? ' c-search-bar--show-full'\n        : ''\n    )\n);\n\nconst focusOnInputIfSearchVisible = (\n  ref: HTMLDivElement | undefined,\n  isSearchBarVisible: boolean\n) => {\n  if (ref && isSearchBarVisible) {\n    const input = ref.querySelector('input');\n    if (input) {\n      input.focus();\n    }\n  }\n};\n\nexport const SearchBar: SFC<ISearchBarProps> = ({\n  isSearchBarVisible,\n  onHideSearchBar,\n  onSearchChanged,\n  onShowSearchBar\n}) => (\n  <div className={getSearchBarClassName(isSearchBarVisible)}\n    ref={\n      (ref: HTMLDivElement) => (\n        focusOnInputIfSearchVisible(ref, isSearchBarVisible)\n      )\n    }>\n    <Input className='c-search-bar__input'\n      onChange={(newSearchTerm) => onSearchChanged(newSearchTerm)}\n      placeholder='Search' />\n    {\n      isSearchBarVisible\n        ? <BareButton className='c-search-bar__search-button'\n            onClick={onHideSearchBar}>\n            <CrossIcon />\n          </BareButton>\n        : <BareButton className='c-search-bar__search-button'\n            onClick={onShowSearchBar}>\n            <MagnifyingGlassIcon />\n          </BareButton>\n    }\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SearchBar\n} from './SearchBar';\nimport {\n  searchBarChanged,\n  selectIsSearchBarVisible,\n  showSearchBar,\n  hideSearchBar\n} from '../../store';\nimport {\n  ISearchBarDispatchProps,\n  ISearchBarInputProps\n} from './SearchBar.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (state: IState): ISearchBarInputProps => ({\n  isSearchBarVisible: selectIsSearchBarVisible(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISearchBarDispatchProps => ({\n  onHideSearchBar: () => dispatch(hideSearchBar()),\n  onSearchChanged: (newSearchTerm: string) => (\n    dispatch((searchBarChanged(newSearchTerm)))\n  ),\n  onShowSearchBar: () => dispatch(showSearchBar())\n});\n\nexport const SearchBarConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n","import React from 'react';\n\nimport './SeasonMenu.scss';\n\nimport {\n  BareButton,\n  CrossIcon,\n  TextMedium,\n  LoadingSpinner\n} from '../../components-elements';\n\nimport {\n  fadeInOutAnimation\n} from '../../helpers';\nimport { PoseGroup } from 'react-pose';\nimport { ISeasonMenuProps } from './SeasonMenu.interface';\n\nconst OverlayFadeInOutAnimation = fadeInOutAnimation();\n\nexport const SeasonMenu = ({\n  allBasicSeasonData,\n  currentSeasonIndex,\n  isLoading,\n  isMenuOpen,\n  onSeasonSelected,\n  onClose\n}: ISeasonMenuProps) => (\n  <div>\n    <PoseGroup>\n      {\n        isMenuOpen &&\n        <OverlayFadeInOutAnimation key='season-menu-overlay'\n          className='c-season-menu__overlay'\n          onClick={onClose} />\n      }\n    </PoseGroup>\n    <nav\n      className={`c-season-menu ${isMenuOpen ? 'c-season-menu--is-open' : ''}`}>\n      {\n        !isLoading\n          ? allBasicSeasonData && allBasicSeasonData.map(({ name }, index) => (\n              <BareButton\n                key={name}\n                className={\n                  `c-season-menu__button ${\n                    index === currentSeasonIndex\n                      ? 'c-season-menu__button--selected'\n                      : ''\n                    }`}\n                onClick={() => onSeasonSelected(index)}>\n                <TextMedium>{ name }</TextMedium>\n              </BareButton>\n            ))\n          : <div className='c-season-menu__loading-spinner-wrapper'>\n            <LoadingSpinner />\n          </div>\n      }\n      <BareButton className='c-season-menu__close-btn'\n        onClick={onClose}>\n        <CrossIcon />\n      </BareButton>\n    </nav>\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SeasonMenu\n} from './SeasonMenu';\nimport {\n  selectIsMenuOpen,\n  closeMenu,\n  selectAllBasicSeasonData,\n  selectIsBasicSeasonDataLoading,\n  selectSeason,\n  selectCurrentSeasonIndex\n} from '../../store';\n\nimport { IState } from '../../interfaces';\nimport {\n  ISeasonMenuInputProps,\n  ISeasonMenuDispatchProps\n} from './SeasonMenu.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): ISeasonMenuInputProps => ({\n  allBasicSeasonData: selectAllBasicSeasonData(state),\n  currentSeasonIndex: selectCurrentSeasonIndex(state),\n  isLoading: selectIsBasicSeasonDataLoading(state),\n  isMenuOpen: selectIsMenuOpen(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISeasonMenuDispatchProps => ({\n  onClose: () => dispatch(closeMenu()),\n  onSeasonSelected: (seasonIndex: number) => dispatch(selectSeason(seasonIndex))\n});\n\nexport const SeasonMenuConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SeasonMenu);\n","import { connect } from 'react-redux';\nimport {\n  ViewWebAppVersion\n} from './ViewWebAppVersion';\nimport {\n  goToWebVersion\n} from '../../store';\nimport { IViewWebAppVersionDispatchProps } from './ViewWebAppVersion.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IViewWebAppVersionDispatchProps => ({\n  onGoToWebVersion: () => dispatch((goToWebVersion()))\n});\n\nexport const ViewWebAppVersionConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewWebAppVersion);\n","import React, { SFC } from 'react';\n\nimport {\n  PrimaryButton\n} from '../../components-elements';\n\nimport {\n  IViewWebAppVersionDispatchProps\n} from './ViewWebAppVersion.interface';\n\nexport const ViewWebAppVersion: SFC<IViewWebAppVersionDispatchProps> = ({\n  onGoToWebVersion\n}) => (\n  <PrimaryButton onClick={onGoToWebVersion}>\n    To web version\n  </PrimaryButton>\n);\n","import React, { SFC } from 'react';\n\nimport './ViewAppLinks.scss';\n\nimport {\n  AndroidAppDownload\n} from '../AndroidAppDownload/AndroidAppDownload';\n\nimport {\n  ViewWebAppVersionConnector\n} from '../ViewWebAppVersion/ViewWebAppVersion.connector';\n\nexport const ViewAppLinks: SFC<{}> = () => (\n  <div className='c-view-app-links'>\n    <AndroidAppDownload />\n    <ViewWebAppVersionConnector />\n  </div>\n);\n","import React, { SFC } from 'react';\n\nimport './WhyEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge\n} from '../../components-elements';\n\nimport {\n  ISummaryColumnList,\n  SummaryColumnList\n} from '../../components-layout';\n\nimport columns from './why-eat-seasonal-columns.json';\n\nconst summaryColumns: ISummaryColumnList = {\n  columns\n};\n\nexport const WhyEatSeasonal: SFC<{}> = ({}) => (\n  <div className='c-why-eat-seasonal'>\n    <h2 className='c-why-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        Why Eat Seasonal?\n      </TextHeadingLarge>\n    </h2>\n    <SummaryColumnList {...summaryColumns} />\n  </div>\n);\n","import React from 'react';\n\nimport './FoodPage.scss';\n\nimport {\n  BottomTabsConnecter,\n  CurrentSeasonNameConnecter,\n  FoodTableConnecter,\n  HeaderConnecter,\n  SeasonMenuConnecter\n} from '../../components-main';\n\nexport const FoodPage = () => (\n  <div className='c-food-page'>\n    <HeaderConnecter />\n    <SeasonMenuConnecter />\n    <div className='c-food-page__main'>\n      <CurrentSeasonNameConnecter />\n      <FoodTableConnecter />\n    </div>\n    <BottomTabsConnecter />\n  </div>\n);\n","import React from 'react';\n\nimport './IntroPage.scss';\n\nimport {\n  AboutEatSeasonal,\n  ViewAppLinks,\n  WhyEatSeasonal\n} from '../../components-main';\n\nexport const IntroPage = () => (\n  <div className='c-intro-page'>\n    <div className='c-intro-page__top-section'>\n      <img className='c-intro-page__splash-image' src='/splash.png'/>\n      <ViewAppLinks />\n    </div>\n    <AboutEatSeasonal />\n    <WhyEatSeasonal />\n    <div className='c-intro-page__mobile-extra-app-links'>\n      <ViewAppLinks />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport {\n  IntroPage,\n  FoodPage\n} from '../components-pages';\nimport './App.scss';\n\nimport { Provider } from 'react-redux';\nimport { store, storeHistory } from '../store/reducers';\n\nimport { Route, Switch } from 'react-router';\n\nimport {\n  FOOD_URL,\n  LANDING_URL\n} from '../const';\n\nimport { ConnectedRouter } from 'connected-react-router';\n\nexport const App = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={storeHistory}>\n      <div className='c-app'>\n        <Switch>\n          <Route path={LANDING_URL} component={IntroPage} exact />\n          <Route path={FOOD_URL} component={FoodPage} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport './styles/index.scss';\nimport { App } from './components-app/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nif (rootElement && rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}