{"version":3,"sources":["services/image-loader.service.ts","components-elements/BackgroundImageWithLoadingSpinner/BackgroundImageWithLoadingSpinner.tsx","components-elements/Buttons/BareButton.tsx","components-elements/Buttons/PrimaryButton.tsx","components-elements/Icons/ArrowIcon.tsx","components-elements/Icons/BurgerIcon.tsx","components-elements/Icons/CrossIcon.tsx","components-elements/Icons/MagnifyingGlassIcon.tsx","components-elements/Input/Input.tsx","components-elements/LoadingSpinner/LoadingSpinner.tsx","components-elements/Text/TextHeadingLarge.tsx","components-elements/Text/TextHeadingMedium.tsx","components-elements/Text/TextHeadingSmall.tsx","components-elements/Text/TextMedium.tsx","components-elements/Text/TextSmall.tsx","components-elements/index.ts","components-layout/index.ts","helpers/Animations/animations.const.ts","helpers/Animations/fade.animations.ts","helpers/functions/make-promise-cancelable.ts","helpers/index.ts","components-layout/ImageGridItem/ImageGridItem.tsx","components-layout/SummaryColumn/index.ts","components-layout/ImageGrid/ImageGrid.tsx","components-layout/SummaryColumn/SummaryColumn.tsx","components-layout/SummaryColumnList/index.ts","components-layout/SummaryColumnList/SummaryColumnList.tsx","components-layout/SeasonNameView/SeasonNameView.tsx","components-main/AboutEatSeasonal/AboutEatSeasonal.tsx","components-main/AndroidAppDownload/AndroidAppDownload.tsx","components-main/BottomTabs/BottomTabs.tsx","store/actions/route.actions.ts","store/actions/web-ui.actions.ts","const/tabs.enum.ts","const/urls.const.ts","store/selectors/route.selectors.ts","store/selectors/web-ui.selectors.ts","store/epics/tracking.epics.ts","store/epics/index.ts","store/epics/route.epics.ts","store/reducers/web-ui.reducer.ts","store/reducers/index.ts","components-main/BottomTabs/BottomTabs.connector.ts","components-main/CurrentSeasonName/CurrentSeasonName.connector.ts","components-main/CurrentSeasonName/CurrentSeasonName.tsx","components-main/FoodDetailsLoader/FoodDetailsLoader.connector.ts","components-main/FoodDetailsLoader/FoodDetailsLoader.tsx","components-main/FoodDetailsTopSection/FoodDetailsTopSection.connector.ts","components-main/FoodDetailsTopSection/FoodDetailsTopSection.tsx","components-main/FoodTable/FoodTable.connector.ts","components-main/FoodTable/FoodTable.tsx","components-main/Header/Header.connector.ts","components-main/Header/Header.tsx","components-layout/PageLayout/PageLayout.tsx","components-main/SeasonMenu/SeasonMenu.tsx","components-main/SeasonMenu/SeasonMenu.connector.ts","components-main/PageWithMenu/PageWithMenu.tsx","components-main/SearchBar/SearchBar.tsx","components-main/SearchBar/SearchBar.connector.ts","components-main/SeasonsForFood/SeasonsForFood.connector.ts","components-main/SeasonsForFood/SeasonsForFood.tsx","components-main/ViewWebAppVersion/ViewWebAppVersion.connector.ts","components-main/ViewWebAppVersion/ViewWebAppVersion.tsx","components-main/ViewAppLinks/ViewAppLinks.tsx","components-main/WhyEatSeasonal/WhyEatSeasonal.tsx","components-main/AllSeasons/AllSeasons.connector.ts","components-main/AllSeasons/AllSeasons.tsx","components-pages/FoodDetailsPage/FoodDetailsPage.tsx","components-pages/FoodTablePage/FoodTablePage.tsx","components-pages/IntroPage/IntroPage.tsx","components-pages/AllSeasonsPage/AllSeasonsPage.tsx","components-app/App.tsx","serviceWorker.js","index.tsx"],"names":["loadingImages","loadImage","imageSrc","Promise","resolve","image","document","createElement","src","push","addEventListener","createImageOnLoadPromise","FadeInOutAnimation","fadeInOutAnimation","BackgroundImageWithLoadingSpinner","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadImagePromise","state","isVisible","inherits","createClass","key","value","_this2","makePromiseCancelable","promise","then","setState","cancel","backgroundImage","concat","skipAnimation","react_default","a","className","style","getBackgroundImageStyle","react_pose_es","children","LoadingSpinner_LoadingSpinner_LoadingSpinner","Component","BareButton","_ref","onClick","PrimaryButton","ArrowIcon","viewBox","strokeLinecap","strokeWidth","stroke","x1","y1","x2","y2","BurgerIcon","height","width","y","CrossIcon","points","MagnifyingGlassIcon","d","Input","_ref$type","type","placeholder","onChange","_onChange","_x","apply","arguments","toString","event","target","LoadingSpinner","TextHeadingLarge","TextHeadingMedium","TextHeadingSmall","TextMedium","TextSmall","__webpack_require__","__webpack_exports__","BackgroundImageWithLoadingSpinner_BackgroundImageWithLoadingSpinner_BackgroundImageWithLoadingSpinner","BareButton_BareButton","PrimaryButton_PrimaryButton","ArrowIcon_ArrowIcon","BurgerIcon_BurgerIcon","CrossIcon_CrossIcon","MagnifyingGlassIcon_MagnifyingGlassIcon","Input_Input_Input","TextHeadingLarge_TextHeadingLarge","TextHeadingMedium_TextHeadingMedium","TextHeadingSmall_TextHeadingSmall","TextMedium_TextMedium","TextSmall_TextSmall","_ImageGrid_ImageGrid__WEBPACK_IMPORTED_MODULE_1__","_SummaryColumn__WEBPACK_IMPORTED_MODULE_2__","o","_SummaryColumnList__WEBPACK_IMPORTED_MODULE_3__","_SeasonNameView_SeasonNameView__WEBPACK_IMPORTED_MODULE_4__","length","undefined","_ref$enterDelay","enterDelay","_ref$exitDelay","exitDelay","_ref$enterDuration","enterDuration","_ref$exitDuration","exitDuration","posed","enter","delay","opacity","transition","duration","exit","hasCancelled","reject","val","isCanceled","error","fade_animations_fadeInOutAnimation","ImageGridItem","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_elements__WEBPACK_IMPORTED_MODULE_2__","id","imageUrlSmall","name","_SummaryColumn__WEBPACK_IMPORTED_MODULE_0__","_SummaryColumn_interface__WEBPACK_IMPORTED_MODULE_1__","ImageGrid","_ImageGridItem_ImageGridItem__WEBPACK_IMPORTED_MODULE_2__","_components_elements__WEBPACK_IMPORTED_MODULE_3__","data","map","item","assign","SummaryColumn","imageUrl","text","title","_SummaryColumnList_interface__WEBPACK_IMPORTED_MODULE_0__","_SummaryColumnList__WEBPACK_IMPORTED_MODULE_1__","SummaryColumnList","columns","column","index","SeasonNameView","AboutEatSeasonal","objectDestructuringEmpty","components_elements","AndroidAppDownload","href","alt","addTabClasses","isSelected","GO_TO_WEB_VERSION","GO_BACK_FROM_FOOD_DETAILS","GO_TO_FOOD_TAB","GO_TO_RECIPES_TABS","TABS","selectCurrentFoodDetailsParams","createMatchSelector","selectCurrentFoodDetailsId","createSelector","routeParams","params","selectCurrentPath","getLocation","location","pathname","selectIsCurrentRouteAllSeasons","path","selectCurrentTab","webUi","webUiState","currentTab","selectIsCurrentTabFood","FOOD","selectIsCurrentTabRecipes","RECIPES","ACTIONS_TO_TRACK","SELECT_SEASON","FOOD_DETAILS_SELECT_SEASON","OPEN_MENU","CLOSE_MENU","RECIPE_ITEM_CLICKED","FOOD_ITEM_CLICKED","rootEpic","combineEpics","toConsumableArray","rootEpics","actions$","pipe","filter","includes","_ref2","ga","ignoreElements","ofType","mapTo","state$","withLatestFrom","slicedToArray","action","selectCurrentSeasonRecipesById","recipeItemId","recipe","window","open","linkUrl","foodItemId","setCurrentFoodDetailsDataStart","goBack","INIT_APP","_ref3","foodDetailsId","Boolean","GO_TO_ALL_SEASONS_VIEW","debounceTime","_ref5","isRouteAllSeasons","setAllSeasonsWithFoodDataStart","getDefaultState","epicMiddleware","createEpicMiddleware","storeHistory","createHashHistory","store","createStore","combineReducers","objectSpread","allReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","run","BottomTabsConnecter","connect","isCurrentTabFood","isCurrentTabRecipes","dispatch","goToFoodTab","goToRecipesTab","CurrentSeasonNameConnecter","currentSeasonName","selectCurrentSeasonName","isLoading","selectIsCurrentSeasonLoading","components_layout","FoodDetailsLoaderConnecter","selectIsFoodDataOrBasicSeasonsLoading","FoodDetailsTopSectionConnecter","foodImageUrl","selectCurrentFoodDetailsImageUrl","foodName","selectCurrentFoodDetailsName","onGoBack","FoodTableConnecter","food","selectVisibleFoodData","recipes","selectVisibleRecipeData","onFoodClick","foodItemClicked","onRecipeClick","recipeItemClicked","HeaderConnecter","onMenuOpen","openMenu","SearchBarConnecter","PageLayout","OverlayFadeInOutAnimation","SeasonMenuConnecter","allBasicSeasonData","selectAllBasicSeasonData","currentSeasonIndex","selectCurrentSeasonIndex","isCurrentRouteAllSeasons","selectIsBasicSeasonDataLoading","isMenuOpen","selectIsMenuOpen","onAllSeasonsSelected","goToAllSeasonsView","onClose","closeMenu","onSeasonSelected","seasonIndex","selectSeason","react","PageWithMenu","PageLayout_PageLayout_PageLayout","getSearchBarClassName","isSearchBarVisible","selectIsSearchBarVisible","onHideSearchBar","hideSearchBar","onSearchChanged","newSearchTerm","searchBarChanged","onShowSearchBar","showSearchBar","ref","input","querySelector","focus","focusOnInputIfSearchVisible","SeasonsForFoodConnecter","seasonsSelectedForFood","selectSeasonsSelectedForFood","foodDetailsSelectSeason","substring","ViewWebAppVersionConnector","onGoToWebVersion","ViewAppLinks","AndroidAppDownload_AndroidAppDownload_AndroidAppDownload","summaryColumns","WhyEatSeasonal","AllSeasonsConnector","hasMoreSeasonsInAllSeasonsView","selectHasMoreSeasonsInAllSeasonsView","selectIsAllSeasonsWithFoodDataLoading","seasons","selectAllSeasonsVisibleFoodData","increaseNumberOfAllFoodSeasonsInView","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","FoodDetailsPage","PageWithMenu_PageWithMenu","FoodTablePage","IntroPage","ViewAppLinks_ViewAppLinks_ViewAppLinks","AboutEatSeasonal_AboutEatSeasonal_AboutEatSeasonal","WhyEatSeasonal_WhyEatSeasonal_WhyEatSeasonal","AllSeasonsPage","App","es","esm","history","react_router","component","exact","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","rootElement","getElementById","hasChildNodes","hydrate","App_App","render","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.daa4267e.chunk.js","sourcesContent":["const loadingImages = [];\n\nconst createImageOnLoadPromise = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  return new Promise((resolve) => {\n    const image = document.createElement('img');\n    image.src = imageSrc;\n    loadingImages.push(image);\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n  });\n};\n\nexport const loadImage = (\n  imageSrc: string\n): Promise<HTMLImageElement> => {\n  const onLoadPromise = createImageOnLoadPromise(imageSrc);\n  return onLoadPromise;\n};\n","import React, { Component } from 'react';\n\nimport './BackgroundImageWithLoadingSpinner.scss';\n\nimport {\n  loadImage\n} from '../../services/image-loader.service';\n\nimport {\n  LoadingSpinner\n} from '../../components-elements';\n\nimport {\n  fadeInOutAnimation, makePromiseCancelable\n} from '../../helpers';\n\nimport { PoseGroup } from 'react-pose';\nimport { ICancelablePromise } from '../../interfaces';\n\nconst FadeInOutAnimation = fadeInOutAnimation();\n\ninterface IBackgroundImageWithLoadingSpinnerPropsInterface {\n  src: string;\n  skipAnimation?: boolean;\n}\ninterface IBackgroundImageWithLoadingSpinnerStateInterface {\n  isVisible: boolean;\n}\n\nexport class BackgroundImageWithLoadingSpinner\nextends Component<\n  IBackgroundImageWithLoadingSpinnerPropsInterface,\n  IBackgroundImageWithLoadingSpinnerStateInterface\n> {\n  public loadImagePromise: ICancelablePromise<HTMLImageElement> | null = null;\n\n  constructor(props: IBackgroundImageWithLoadingSpinnerPropsInterface) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n  }\n\n  public componentDidMount() {\n    this.loadImagePromise = makePromiseCancelable(loadImage(this.props.src));\n    this.loadImagePromise.promise.then(() => {\n      this.setState({\n        isVisible: true\n      });\n    }, () => undefined);\n  }\n\n  public componentWillUnmount() {\n    if (this.loadImagePromise) {\n      this.loadImagePromise.cancel();\n    }\n  }\n\n  public getBackgroundImageStyle() {\n    return { backgroundImage: `url(${this.props.src})` };\n  }\n\n  public render() {\n    return !this.props.skipAnimation\n      ? (\n        <PoseGroup>\n          {\n            this.state.isVisible\n              ? <FadeInOutAnimation key='background-image-fade-in-out'\n                className='c-background-image-with-loading-spinner'\n                style={this.getBackgroundImageStyle()}>\n                { this.props.children }\n              </FadeInOutAnimation>\n              : <FadeInOutAnimation key='loading-spinner-fade-in-out'\n                className='c-background-image-with-loading-spinner'>\n                <LoadingSpinner />\n              </FadeInOutAnimation>\n          }\n        </PoseGroup>\n      )\n      : <div className='c-background-image-with-loading-spinner'\n          style={this.getBackgroundImageStyle()} />;\n  }\n}\n","import React, { SFC } from 'react';\nimport './BareButton.scss';\n\nexport const BareButton: SFC<{\n  className?: string,\n  onClick?: () => void\n}> = ({\n  className,\n  children,\n  onClick\n}) => (\n  <button className={`${(className || '')} c-bare-button`} onClick={onClick}>\n    { children }\n  </button>\n);\n","import React, { SFC } from 'react';\nimport './PrimaryButton.scss';\n\nexport const PrimaryButton: SFC<{\n  className?: string,\n  onClick?: () => void\n}> = ({\n  className,\n  children,\n  onClick\n}) => (\n  <button className={`${(className || '')} c-primary-button`}\n    onClick={onClick}>\n    { children }\n  </button>\n);\n","import React from 'react';\nimport './icon.scss';\n\nexport const ArrowIcon = () => (\n  <svg className='c-icon' viewBox='0 0 24 24'>\n    <g strokeLinecap='round' strokeWidth='2' stroke='#000'>\n      <line x1='1' y1='11' x2='6' y2='5' />\n      <line x1='1' y1='11' x2='6' y2='17' />\n      <line x1='2' y1='11' x2='22' y2='11' />\n    </g>\n  </svg>\n);\n","import React from 'react';\nimport './icon.scss';\n\nexport const BurgerIcon = () => (\n  <svg viewBox='0 0 24 24' className='c-icon'>\n    <rect height='2' width='24' y='5'></rect>\n    <rect height='2' width='24' y='11'></rect>\n    <rect height='2' width='24' y='17'></rect>\n  </svg>\n);\n","import React from 'react';\nimport './icon.scss';\n\nexport const CrossIcon = () => (\n  <svg className='c-icon' viewBox='0 0 24 24'>\n    {/* tslint:disable-next-line */}\n    <polygon points='19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12' />\n  </svg>\n);\n","import React from 'react';\nimport './icon.scss';\n\nexport const MagnifyingGlassIcon = () => (\n  <svg className='c-icon' viewBox='0 0 32 32'>\n    {/* tslint:disable-next-line */}\n    <path d='M19.4271164,21.4271164 C18.0372495,22.4174803 16.3366522,23 14.5,23 C9.80557939,23 6,19.1944206 6,14.5 C6,9.80557939 9.80557939,6 14.5,6 C19.1944206,6 23,9.80557939 23,14.5 C23,16.3366522 22.4174803,18.0372495 21.4271164,19.4271164 L27.0119176,25.0119176 C27.5621186,25.5621186 27.5575313,26.4424687 27.0117185,26.9882815 L26.9882815,27.0117185 C26.4438648,27.5561352 25.5576204,27.5576204 25.0119176,27.0119176 L19.4271164,21.4271164 L19.4271164,21.4271164 Z M14.5,21 C18.0898511,21 21,18.0898511 21,14.5 C21,10.9101489 18.0898511,8 14.5,8 C10.9101489,8 8,10.9101489 8,14.5 C8,18.0898511 10.9101489,21 14.5,21 L14.5,21 Z' />\n  </svg>\n);\n","import React, { SFC } from 'react';\nimport './Input.scss';\n\nexport const Input: SFC<{\n  className?: string,\n  type?: 'text' | 'number',\n  placeholder?: string,\n  onChange: (newValue: string) => void\n}> = ({\n  children,\n  className,\n  type = 'text',\n  placeholder,\n  onChange\n}) => (\n  <input\n    className={`${(className || '')} c-input`}\n    placeholder={placeholder}\n    type={type}\n    onChange={(event) => onChange(event.target.value)}>\n    { children }\n  </input>\n);\n","import React from 'react';\n\nimport './LoadingSpinner.scss';\n\nexport const LoadingSpinner = () => (\n  <div className='c-loading-spinner'>\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n    <div className='c-loading-spinner__dot' />\n  </div>\n);\n","import React, { SFC } from 'react';\nimport './TextHeadingLarge.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextHeadingLarge: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-large`}>\n    { children }\n  </span>\n);\n","import React, { SFC } from 'react';\nimport './TextHeadingMedium.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextHeadingMedium: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-medium`}>\n    { children }\n  </span>\n);\n","import React, { SFC } from 'react';\nimport './TextHeadingSmall.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextHeadingSmall: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-heading-small`}>\n    { children }\n  </span>\n);\n","import React, { SFC } from 'react';\nimport './TextMedium.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextMedium: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-medium`}>\n    { children }\n  </span>\n);\n","import React, { SFC } from 'react';\nimport './TextSmall.scss';\nimport { ITextInterface } from './Text.interface';\n\nexport const TextSmall: SFC<ITextInterface> = ({\n  className,\n  children\n}) => (\n  <span className={`${(className || '')} c-text-small`}>\n    { children }\n  </span>\n);\n","export * from './BackgroundImageWithLoadingSpinner/BackgroundImageWithLoadingSpinner';\n\nexport * from './Buttons';\n\nexport * from './Icons';\n\nexport * from './Input';\n\nexport * from './LoadingSpinner/LoadingSpinner';\n\nexport * from './Text';\n","export * from './ImageGridItem/ImageGridItem';\n\nexport * from './ImageGrid/ImageGrid';\n\nexport * from './SummaryColumn';\n\nexport * from './SummaryColumnList';\n\nexport * from './SeasonNameView/SeasonNameView';\n","export const DEFAULT_ANIMATION_TIME = 500;\n","import posed from 'react-pose';\n\nimport {\n  DEFAULT_ANIMATION_TIME\n} from './animations.const';\n\nexport const fadeInOutAnimation = ({\n  enterDelay = 0,\n  exitDelay = 0,\n  enterDuration = DEFAULT_ANIMATION_TIME,\n  exitDuration = DEFAULT_ANIMATION_TIME,\n  type = 'div'\n} = {}) => posed[type]({\n  enter: {\n    delay: enterDelay,\n    opacity: 1,\n    transition: {\n      duration: enterDuration\n    }\n  },\n  exit: {\n    delay: exitDelay,\n    opacity: 0,\n    transition: {\n      duration: exitDuration\n    }\n  }\n});\n","import { ICancelablePromise } from '../../interfaces';\n\nexport const makePromiseCancelable = <T>(\n  promise: Promise<T>\n): ICancelablePromise<T> => {\n  let hasCancelled = false;\n\n  const wrappedPromise = new Promise<T>((resolve, reject) => {\n      promise.then(\n          (val) => hasCancelled ? reject({isCanceled: true}) : resolve(val),\n          (error) => hasCancelled ? reject({isCanceled: true}) : reject(error)\n      );\n  });\n\n  return {\n      promise: wrappedPromise,\n      cancel() {\n          hasCancelled = true;\n      }\n  };\n};\n","export * from './Animations';\n\nexport * from './functions';\n","import React, { SFC } from 'react';\n\nimport './ImageGridItem.scss';\n\nimport {\n  TextMedium\n} from '../../components-elements';\n\nimport {\n  BackgroundImageWithLoadingSpinner\n} from '../../components-elements';\nimport { IImageGridItem } from './ImageGridItem.interface';\n\nexport const ImageGridItem: SFC<IImageGridItem> = ({\n  id,\n  imageUrlSmall,\n  onClick,\n  name,\n  skipAnimation\n}) => (\n  <div onClick={() => onClick && onClick(id)}\n    className='c-image-grid-item'>\n    <div className='c-image-grid-item__inner'>\n      <div className='c-image-grid-item__image'>\n        <BackgroundImageWithLoadingSpinner\n          src={imageUrlSmall} skipAnimation={skipAnimation}/>\n      </div>\n      <TextMedium className='c-image-grid-item__text'>\n        {name}\n      </TextMedium>\n    </div>\n  </div>\n);\n","export * from './SummaryColumn';\n\nexport * from './SummaryColumn.interface';\n","import React, { SFC } from 'react';\n\nimport './ImageGrid.scss';\n\nimport {\n  ImageGridItem\n} from '../ImageGridItem/ImageGridItem';\nimport { IImageGrid } from './ImageGrid.interface';\nimport { TextMedium } from '../../components-elements';\n\nexport const ImageGrid: SFC<IImageGrid> = ({\n  data,\n  onClick,\n  skipAnimation\n}) => (\n  <div className='c-image-grid'>\n    {\n      data && data.length\n        ? data.map((item) => (\n          <ImageGridItem\n            key={item.name}\n            {...item}\n            onClick={onClick}\n            skipAnimation={skipAnimation} />\n        ))\n        : <TextMedium className='c-image-grid__no-results'>\n            No results found\n          </TextMedium>\n    }\n  </div>\n);\n","import React, { SFC } from 'react';\n\nimport './SummaryColumn.scss';\n\nimport {\n  TextMedium,\n  TextHeadingSmall\n} from '../../components-elements';\n\nimport {\n  ISummaryColumn\n} from './SummaryColumn.interface';\n\nexport const SummaryColumn: SFC<ISummaryColumn> = ({\n  imageUrl,\n  text,\n  title\n}) => (\n  <div className='c-summary-column'>\n    {\n      imageUrl && <img src={imageUrl} className='c-summary-column__image' />\n    }\n    <h3 className='c-summary-column__heading'>\n      <TextHeadingSmall>\n        { title }\n      </TextHeadingSmall>\n    </h3>\n    <TextMedium>\n      { text }\n    </TextMedium>\n  </div>\n);\n","export * from './SummaryColumnList.interface';\n\nexport * from './SummaryColumnList';\n","import React, { SFC } from 'react';\n\nimport './SummaryColumnList.scss';\n\nimport {\n  SummaryColumn\n} from './../SummaryColumn';\n\nimport {\n  ISummaryColumnList\n} from './SummaryColumnList.interface';\n\nexport const SummaryColumnList: SFC<ISummaryColumnList> = ({\n  columns\n}) => (\n  <ul className='c-summary-column-list'>\n    {\n      columns.map((column, index) => (\n        <SummaryColumn {...column} key={index} />\n      ))\n    }\n  </ul>\n);\n","import React from 'react';\nimport './SeasonNameView.scss';\nimport {\n  ISeasonNameViewProps\n} from './SeasonNameView.interface';\nimport { TextHeadingSmall } from '../../components-elements';\n\nexport const SeasonNameView = ({\n  name\n}: ISeasonNameViewProps) => (\n  <TextHeadingSmall className='c-season-name-view'>\n    {name}\n  </TextHeadingSmall>\n);\n","import React, { SFC } from 'react';\n\nimport './AboutEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge,\n  TextMedium\n} from '../../components-elements';\n\nexport const AboutEatSeasonal: SFC<{}> = ({}) => (\n  <div className='c-about-eat-seasonal'>\n    <h2 className='c-about-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        About Eat Seasonal\n      </TextHeadingLarge>\n    </h2>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        Eat Seasonal started because we wanted a way to easily see what fruit\n        and vegetables are in seasons. Walking around a supermarket, trying to\n        plan seasonal meals becomes much easier when you can quickly access\n        information on everything that's in season through your phone.\n      </TextMedium>\n    </p>\n    <p className='c-about-eat-seasonal__text'>\n      <TextMedium>\n        The app and website give you quick and simple view of all the food\n        currently in seasons. They also provide a recipes section including\n        carefully selected recipes which use ingredients which are mostly in\n        seasons. New recipes are being added all the time!\n      </TextMedium>\n    </p>\n  </div>\n);\n","import React, { SFC } from 'react';\n\nimport './AndroidAppDownload.scss';\n\nexport const AndroidAppDownload: SFC<{}> = () => (\n  <a className='c-android-app-download'\n    href={\n    'https://play.google.com/store/apps/details?id=com.chrisbdev.seasonal&p' +\n      'campaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'\n  }>\n    <img className='c-android-app-download__image'\n      alt='Get it on Google Play'\n      src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png'/>\n  </a>\n);\n","import React, { SFC } from 'react';\n\nimport './BottomTabs.scss';\n\nimport {\n  BareButton\n} from '../../components-elements';\nimport { IBottomTabProps } from './BottomTabs.interface';\n\nconst addTabClasses = (isSelected: boolean) => (\n  `c-bottom-tabs__tab ${\n    isSelected\n      ? ' c-bottom-tabs__tab--selected'\n      : ''\n  }`\n);\n\nexport const BottomTabs: SFC<IBottomTabProps> = ({\n  isCurrentTabFood,\n  isCurrentTabRecipes,\n  goToFoodTab,\n  goToRecipesTab\n}) => (\n  <nav className='c-bottom-tabs'>\n    <BareButton\n      className={addTabClasses(isCurrentTabFood)}\n      onClick={goToFoodTab}>\n      Food\n    </BareButton>\n    <BareButton\n      className={addTabClasses(isCurrentTabRecipes)}\n      onClick={goToRecipesTab}>\n      Recipes\n    </BareButton>\n  </nav>\n);\n","import { Action } from 'redux';\n\nexport const GO_TO_WEB_VERSION = 'GO_TO_WEB_VERSION';\nexport function goToWebVersion(): Action {\n  return {\n    type: GO_TO_WEB_VERSION\n  };\n}\n\nexport const GO_BACK_FROM_FOOD_DETAILS = 'GO_BACK_FROM_FOOD_DETAILS';\nexport function goBackFromFoodDetails(): Action {\n  return {\n    type: GO_BACK_FROM_FOOD_DETAILS\n  };\n}\n","import { Action } from 'redux';\n\nexport const GO_TO_FOOD_TAB = 'GO_TO_FOOD_TAB';\nexport function goToFoodTab(): Action {\n  return {\n    type: GO_TO_FOOD_TAB\n  };\n}\n\nexport const GO_TO_RECIPES_TABS = 'GO_TO_RECIPES_TABS';\nexport function goToRecipesTab(): Action {\n  return {\n    type: GO_TO_RECIPES_TABS\n  };\n}\n","export enum TABS {\n  FOOD,\n  RECIPES\n}\n","export const LANDING_URL = '/';\nexport const FOOD_TABLE_URL = '/food';\nexport const FOOD_DETAILS_URL = '/food-details';\nexport const ALL_SEASONS_URL = '/all-seasons';\n","import { createMatchSelector, RouterRootState, getLocation } from 'connected-react-router';\nimport { FOOD_DETAILS_URL, ALL_SEASONS_URL } from '../../const';\nimport { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\n\nexport const selectCurrentFoodDetailsParams = createMatchSelector<\n  RouterRootState,\n  {\n    id: string\n  }\n>(\n  `${FOOD_DETAILS_URL}/:id`\n);\n\nexport const selectCurrentFoodDetailsId = createSelector(\n  selectCurrentFoodDetailsParams,\n  (routeParams) => routeParams && routeParams.params.id\n);\n\nexport const selectCurrentLocation = (state: IState) => getLocation(state);\n\nexport const selectCurrentPath = createSelector(\n  selectCurrentLocation,\n  (location) => location.pathname\n);\n\nexport const selectIsCurrentRouteAllSeasons = createSelector(\n  selectCurrentPath,\n  (path) => path === ALL_SEASONS_URL\n);\n","import { createSelector } from 'reselect';\nimport { IState } from '../../interfaces';\nimport { TABS } from '../../const';\n\nconst selectWebUiState = (state: IState) => state.webUi;\n\nexport const selectCurrentTab = createSelector(\n  selectWebUiState,\n  (webUiState): TABS => webUiState.currentTab\n);\n\nexport const selectIsCurrentTabFood = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.FOOD\n);\n\nexport const selectIsCurrentTabRecipes = createSelector(\n  selectCurrentTab,\n  (currentTab): boolean => currentTab === TABS.RECIPES\n);\n","import { ActionsObservable } from 'redux-observable';\n\nimport {\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION\n} from '../actions';\n\nimport {\n  SELECT_SEASON,\n  FOOD_DETAILS_SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  RECIPE_ITEM_CLICKED,\n  FOOD_ITEM_CLICKED\n} from '@chrisb-dev/seasonal-shared';\n\nimport {\n  map,\n  filter,\n  ignoreElements\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\n\nconst ACTIONS_TO_TRACK = [\n  SELECT_SEASON,\n  FOOD_DETAILS_SELECT_SEASON,\n  OPEN_MENU,\n  CLOSE_MENU,\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS,\n  GO_TO_WEB_VERSION,\n  RECIPE_ITEM_CLICKED,\n  FOOD_ITEM_CLICKED\n];\n\nexport const trackActionEpic$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    filter(({ type }) => ACTIONS_TO_TRACK.includes(type)),\n    map(({ type }) => ga('send', 'event', type, type)),\n    ignoreElements()\n  )\n);\n","import { combineEpics } from 'redux-observable';\n\nimport { rootEpics } from '@chrisb-dev/seasonal-shared';\nimport { trackActionEpic$ } from './tracking.epics';\n\nimport {\n  goToWebVersion$,\n  goToRecipeLink$,\n  goToFoodLink$,\n  goToFoodTable$,\n  goToFoodDetails$,\n  initFoodDetails$,\n  initAllSeasonsWithFoodData$,\n  goToAllSeasonsView$,\n  goBack$\n} from './route.epics';\n\nexport const rootEpic = combineEpics(\n  ...rootEpics,\n  trackActionEpic$,\n  goToWebVersion$,\n  goToRecipeLink$,\n  goToFoodLink$,\n  goToFoodDetails$,\n  goBack$,\n  initFoodDetails$,\n  initAllSeasonsWithFoodData$,\n  goToFoodTable$,\n  goToAllSeasonsView$\n);\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport {\n  mapTo, withLatestFrom, map, filter, debounceTime\n} from 'rxjs/operators';\nimport { Action } from 'redux';\nimport { Observable } from 'rxjs';\nimport {\n  GO_TO_WEB_VERSION,\n  GO_BACK_FROM_FOOD_DETAILS\n} from '../actions';\nimport {\n  GO_TO_ALL_SEASONS_VIEW,\n  RECIPE_ITEM_CLICKED,\n  IRecipeItemClicked,\n  FOOD_ITEM_CLICKED,\n  IFoodItemClicked,\n  FOOD_DETAILS_SELECT_SEASON,\n  SELECT_SEASON,\n  setCurrentFoodDetailsDataStart,\n  INIT_APP,\n  selectCurrentSeasonRecipesById,\n  setAllSeasonsWithFoodDataStart\n} from '@chrisb-dev/seasonal-shared';\nimport { push, goBack } from 'connected-react-router';\nimport { FOOD_TABLE_URL, FOOD_DETAILS_URL, ALL_SEASONS_URL } from '../../const';\nimport { IState } from '../../interfaces';\nimport { selectCurrentFoodDetailsId, selectIsCurrentRouteAllSeasons } from '../selectors';\nimport { WebSeasonalEpic } from './seasonal-epic.type';\n\nexport const goToWebVersion$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(GO_TO_WEB_VERSION),\n    mapTo(push(FOOD_TABLE_URL))\n  )\n);\n\nexport const goToRecipeLink$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(RECIPE_ITEM_CLICKED),\n    withLatestFrom(state$),\n    map(([\n      action,\n      state\n    ]) => selectCurrentSeasonRecipesById(\n        (action as IRecipeItemClicked).recipeItemId\n      )(state)\n    ),\n    map((recipe) => {\n      if (recipe) {\n        window.open(recipe.linkUrl, '_blank');\n      }\n      return { type: '' };\n    })\n  )\n);\n\nexport const goToFoodLink$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(FOOD_ITEM_CLICKED),\n    map((action) => (\n      push(`${FOOD_DETAILS_URL}/${(action as IFoodItemClicked).foodItemId}`)\n    ))\n  )\n);\n\nexport const goToFoodDetails$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(FOOD_ITEM_CLICKED),\n    map((action) => (\n      setCurrentFoodDetailsDataStart((action as IFoodItemClicked).foodItemId)\n    ))\n  )\n);\n\nexport const initFoodDetails$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(INIT_APP),\n    withLatestFrom(state$),\n    map(([, state]) => selectCurrentFoodDetailsId(state)),\n    filter((foodDetailsId) => Boolean(foodDetailsId)),\n    map((foodDetailsId) => setCurrentFoodDetailsDataStart(foodDetailsId!))\n  )\n);\n\nexport const initAllSeasonsWithFoodData$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>,\n  state$: StateObservable<IState>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      GO_TO_ALL_SEASONS_VIEW,\n      INIT_APP,\n      GO_BACK_FROM_FOOD_DETAILS\n    ),\n    debounceTime(50),\n    withLatestFrom(state$),\n    map(([, state]) => selectIsCurrentRouteAllSeasons(state)),\n    filter((isRouteAllSeasons) => Boolean(isRouteAllSeasons)),\n    mapTo(setAllSeasonsWithFoodDataStart())\n  )\n);\n\nexport const goToFoodTable$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      FOOD_DETAILS_SELECT_SEASON,\n      SELECT_SEASON\n    ),\n    mapTo(push(FOOD_TABLE_URL))\n  )\n);\n\nexport const goBack$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(\n      GO_BACK_FROM_FOOD_DETAILS\n    ),\n    mapTo(goBack())\n  )\n);\n\nexport const goToAllSeasonsView$: WebSeasonalEpic = (\n  actions$: ActionsObservable<Action>\n): Observable<Action> => (\n  actions$.pipe(\n    ofType(GO_TO_ALL_SEASONS_VIEW),\n    mapTo(push(ALL_SEASONS_URL))\n  )\n);\n","import {\n  GO_TO_FOOD_TAB,\n  GO_TO_RECIPES_TABS\n} from '../actions';\nimport { IWebUiState } from '../../interfaces';\nimport { Action } from 'redux';\nimport { TABS } from '../../const';\n\nconst getDefaultState = (): IWebUiState => ({\n  currentTab: TABS.FOOD\n});\n\nexport function webUiReducer(\n  state = getDefaultState(),\n  action: Action\n): IWebUiState {\n  switch (action.type) {\n    case GO_TO_FOOD_TAB:\n      return {\n        ...state,\n        currentTab: TABS.FOOD\n      };\n    case GO_TO_RECIPES_TABS:\n      return {\n        ...state,\n        currentTab: TABS.RECIPES\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  Action,\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose\n} from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport {\n  allReducers\n} from '@chrisb-dev/seasonal-shared';\n\nimport { webUiReducer } from './web-ui.reducer';\n\nimport {\n  rootEpic\n} from '../epics';\n\nimport { IState } from '../../interfaces';\n\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nconst epicMiddleware = createEpicMiddleware<Action, Action, IState, {}>();\nexport const storeHistory = createHashHistory();\n\nexport const store = createStore(\n  combineReducers({\n    ...allReducers,\n    router: connectRouter(storeHistory),\n    webUi: webUiReducer\n  }),\n  compose(\n    applyMiddleware(\n      routerMiddleware(storeHistory),\n      epicMiddleware\n    )\n  )\n);\nepicMiddleware.run(rootEpic);\n","import { connect } from 'react-redux';\nimport {\n  BottomTabs\n} from './BottomTabs';\nimport {\n  goToFoodTab,\n  goToRecipesTab,\n  selectIsCurrentTabFood,\n  selectIsCurrentTabRecipes\n} from '../../store';\nimport {\n  IBottomTabDispatchProps,\n  IBottomTabInputProps\n} from './BottomTabs.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): IBottomTabInputProps => ({\n  isCurrentTabFood: selectIsCurrentTabFood(state),\n  isCurrentTabRecipes: selectIsCurrentTabRecipes(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IBottomTabDispatchProps => ({\n  goToFoodTab: () => dispatch(goToFoodTab()),\n  goToRecipesTab: () => dispatch(goToRecipesTab())\n});\n\nexport const BottomTabsConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomTabs);\n","import { connect } from 'react-redux';\nimport {\n  CurrentSeasonName\n} from './CurrentSeasonName';\nimport {\n  selectCurrentSeasonName,\n  selectIsCurrentSeasonLoading\n} from '@chrisb-dev/seasonal-shared';\nimport {\n  ICurrentSeasonName\n} from './CurrentSeasonName.interface';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (\n  state: IState\n): ICurrentSeasonName => ({\n  currentSeasonName: selectCurrentSeasonName(state),\n  isLoading: selectIsCurrentSeasonLoading(state)\n});\n\nexport const CurrentSeasonNameConnecter = connect(\n  mapStateToProps\n)(CurrentSeasonName);\n","import React, { SFC } from 'react';\n\nimport './CurrentSeasonName.scss';\n\nimport { ICurrentSeasonName } from './CurrentSeasonName.interface';\nimport { SeasonNameView } from '../../components-layout';\n\nexport const CurrentSeasonName: SFC<ICurrentSeasonName> = ({\n  currentSeasonName,\n  isLoading\n}) => (\n  !isLoading\n    ? <SeasonNameView name={currentSeasonName} />\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodDetailsLoader\n} from './FoodDetailsLoader';\nimport {\n  selectIsFoodDataOrBasicSeasonsLoading\n} from '@chrisb-dev/seasonal-shared';\n\nimport { IState } from '../../interfaces';\nimport {\n  IFoodDetailsLoaderInputProps\n} from './FoodDetailsLoader.interface';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodDetailsLoaderInputProps => ({\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nexport const FoodDetailsLoaderConnecter = connect(\n  mapStateToProps\n)(FoodDetailsLoader);\n","import React from 'react';\n\nimport './FoodDetailsLoader.scss';\n\nimport {\n  LoadingSpinner\n} from '../../components-elements';\n\nimport {\n  IFoodDetailsLoaderInputProps\n} from './FoodDetailsLoader.interface';\n\nexport const FoodDetailsLoader = ({\n  isLoading\n}: IFoodDetailsLoaderInputProps) => (\n  isLoading\n    ? <div className='c-food-details-loader'>\n      <LoadingSpinner />\n    </div>\n    : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodDetailsTopSection\n} from './FoodDetailsTopSection';\nimport {\n  goBackFromFoodDetails\n} from '../../store';\nimport {\n  selectCurrentFoodDetailsName,\n  selectCurrentFoodDetailsImageUrl,\n  selectIsFoodDataOrBasicSeasonsLoading\n} from '@chrisb-dev/seasonal-shared';\n\nimport { IState } from '../../interfaces';\nimport {\n  IFoodDetailsTopSectionInputProps,\n  IFoodDetailsTopSectionDispatchProps\n} from './FoodDetailsTopSection.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodDetailsTopSectionInputProps => ({\n  foodImageUrl: selectCurrentFoodDetailsImageUrl(state),\n  foodName: selectCurrentFoodDetailsName(state),\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IFoodDetailsTopSectionDispatchProps => ({\n  onGoBack: () => dispatch(goBackFromFoodDetails())\n});\n\nexport const FoodDetailsTopSectionConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodDetailsTopSection);\n","import React from 'react';\n\nimport './FoodDetailsTopSection.scss';\n\nimport {\n  ArrowIcon,\n  BareButton,\n  TextHeadingMedium\n} from '../../components-elements';\n\nimport {\n  IFoodDetailsTopSectionProps\n} from './FoodDetailsTopSection.interface';\n\nexport const FoodDetailsTopSection = ({\n  foodImageUrl,\n  foodName,\n  isLoading,\n  onGoBack\n}: IFoodDetailsTopSectionProps) => (\n  !isLoading\n    ? <div className='c-food-details-top-section'>\n    <div className='c-food-details-top-section__top-bar'>\n      <BareButton\n        className='c-food-details-top-section__back-button'\n        onClick={onGoBack}>\n        <ArrowIcon />\n      </BareButton>\n      <TextHeadingMedium className='c-food-details-top-section__food-name'>\n        {foodName}\n      </TextHeadingMedium>\n    </div>\n    {\n      foodImageUrl && <img src={foodImageUrl}\n        className='c-food-details-top-section__food-image'/>\n    }\n  </div>\n  : null\n);\n","import { connect } from 'react-redux';\nimport {\n  FoodTable\n} from './FoodTable';\nimport {\n  selectIsCurrentTabFood\n} from '../../store';\nimport {\n  selectIsCurrentSeasonLoading,\n  selectVisibleRecipeData,\n  selectVisibleFoodData,\n  foodItemClicked,\n  recipeItemClicked\n} from '@chrisb-dev/seasonal-shared';\nimport { IState } from '../../interfaces';\nimport {\n  IFoodTableInputProps,\n  IFoodTableDispatchProps\n} from './FoodTable.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): IFoodTableInputProps => {\n  return {\n    food: selectVisibleFoodData(state),\n    isCurrentTabFood: selectIsCurrentTabFood(state),\n    isLoading: selectIsCurrentSeasonLoading(state),\n    recipes: selectVisibleRecipeData(state)\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IFoodTableDispatchProps => {\n  return {\n    onFoodClick: (foodItemId) => dispatch(foodItemClicked(foodItemId)),\n    onRecipeClick: (recipeItemId) => dispatch(recipeItemClicked(recipeItemId))\n  };\n};\n\nexport const FoodTableConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FoodTable);\n","import React from 'react';\n\nimport './FoodTable.scss';\n\nimport {\n  ImageGrid\n} from '../../components-layout';\n\nimport {\n  LoadingSpinner\n} from '../../components-elements';\nimport { IFoodTableProps } from './FoodTable.interface';\n\nexport const FoodTable = ({\n  isCurrentTabFood,\n  isLoading,\n  food,\n  recipes,\n  onFoodClick,\n  onRecipeClick\n}: IFoodTableProps) => (\n  isLoading\n    ? <div className='c-food-table__loading-spinner-wrapper'>\n      <LoadingSpinner />\n    </div>\n    : isCurrentTabFood\n      ? <ImageGrid data={food} onClick={onFoodClick} />\n      : <ImageGrid data={recipes} onClick={onRecipeClick} />\n);\n","import { connect } from 'react-redux';\nimport {\n  Header\n} from './Header';\nimport {\n  openMenu\n} from '@chrisb-dev/seasonal-shared';\nimport { IHeaderDispatchProps } from './Header.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IHeaderDispatchProps => ({\n  onMenuOpen: () => dispatch(openMenu())\n});\n\nexport const HeaderConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { SFC } from 'react';\n\nimport './Header.scss';\n\nimport {\n  BareButton,\n  BurgerIcon,\n  TextHeadingLarge\n} from '../../components-elements';\nimport {\n  SearchBarConnecter\n} from '../';\nimport { IHeaderDispatchProps } from './Header.interface';\n\nexport const Header: SFC<IHeaderDispatchProps> = ({\n  onMenuOpen\n}) => (\n  <header className='c-header'>\n    <BareButton className='c-header__btn' onClick={onMenuOpen}>\n      <BurgerIcon />\n    </BareButton>\n    <h1 className='c-header__text'>\n      <TextHeadingLarge>\n        Eat Seasonal\n      </TextHeadingLarge>\n    </h1>\n    <SearchBarConnecter />\n  </header>\n);\n","import React, { SFC } from 'react';\n\nimport './PageLayout.scss';\n\nexport const PageLayout: SFC<{}> = ({\n  children\n}) => (\n  <div className='c-page-layout'>\n    { children }\n  </div>\n);\n","import React, { Fragment } from 'react';\n\nimport './SeasonMenu.scss';\n\nimport {\n  BareButton,\n  CrossIcon,\n  TextMedium,\n  LoadingSpinner\n} from '../../components-elements';\n\nimport {\n  fadeInOutAnimation\n} from '../../helpers';\nimport { PoseGroup } from 'react-pose';\nimport { ISeasonMenuProps } from './SeasonMenu.interface';\n\nconst OverlayFadeInOutAnimation = fadeInOutAnimation();\n\nexport const SeasonMenu = ({\n  allBasicSeasonData,\n  currentSeasonIndex,\n  isCurrentRouteAllSeasons,\n  isLoading,\n  isMenuOpen,\n  onSeasonSelected,\n  onClose,\n  onAllSeasonsSelected\n}: ISeasonMenuProps) => (\n  <div>\n    <PoseGroup>\n      {\n        isMenuOpen &&\n        <OverlayFadeInOutAnimation key='season-menu-overlay'\n          className='c-season-menu__overlay'\n          onClick={onClose} />\n      }\n    </PoseGroup>\n    <nav\n      className={`c-season-menu ${isMenuOpen ? 'c-season-menu--is-open' : ''}`}>\n      {\n        !isLoading\n          ? <Fragment>\n              { allBasicSeasonData &&\n                  allBasicSeasonData.map(({ name }, index) => (\n                  <BareButton\n                    key={name}\n                    className={\n                      `c-season-menu__button ${\n                        !isCurrentRouteAllSeasons &&\n                        index === currentSeasonIndex\n                          ? 'c-season-menu__button--selected'\n                          : ''\n                        }`}\n                    onClick={() => onSeasonSelected(index)}>\n                    <TextMedium>{ name }</TextMedium>\n                  </BareButton>\n                ))\n              }\n              <BareButton className={\n                `c-season-menu__button ${\n                  isCurrentRouteAllSeasons\n                    ? 'c-season-menu__button--selected'\n                    : ''\n                }`\n                }\n                onClick={onAllSeasonsSelected}>\n                <TextMedium>All seasons</TextMedium>\n              </BareButton>\n          </Fragment>\n          : <div className='c-season-menu__loading-spinner-wrapper'>\n            <LoadingSpinner />\n          </div>\n      }\n      <BareButton className='c-season-menu__close-btn'\n        onClick={onClose}>\n        <CrossIcon />\n      </BareButton>\n    </nav>\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SeasonMenu\n} from './SeasonMenu';\nimport {\n  selectIsMenuOpen,\n  closeMenu,\n  selectAllBasicSeasonData,\n  selectIsBasicSeasonDataLoading,\n  selectSeason,\n  selectCurrentSeasonIndex,\n  goToAllSeasonsView\n} from '@chrisb-dev/seasonal-shared';\n\nimport { IState } from '../../interfaces';\nimport {\n  ISeasonMenuInputProps,\n  ISeasonMenuDispatchProps\n} from './SeasonMenu.interface';\nimport { Dispatch } from 'redux';\n\nimport { selectIsCurrentRouteAllSeasons } from '../../store';\n\nconst mapStateToProps = (\n  state: IState\n): ISeasonMenuInputProps => ({\n  allBasicSeasonData: selectAllBasicSeasonData(state),\n  currentSeasonIndex: selectCurrentSeasonIndex(state),\n  isCurrentRouteAllSeasons: selectIsCurrentRouteAllSeasons(state),\n  isLoading: selectIsBasicSeasonDataLoading(state),\n  isMenuOpen: selectIsMenuOpen(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISeasonMenuDispatchProps => ({\n  onAllSeasonsSelected: () => dispatch(goToAllSeasonsView()),\n  onClose: () => dispatch(closeMenu()),\n  onSeasonSelected: (\n    seasonIndex: number\n  ) => dispatch(selectSeason(seasonIndex))\n});\n\nexport const SeasonMenuConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SeasonMenu);\n","import React, { SFC } from 'react';\nimport { PageLayout } from '../../components-layout/PageLayout/PageLayout';\nimport { HeaderConnecter } from '../Header/Header.connector';\nimport { SeasonMenuConnecter } from '../SeasonMenu/SeasonMenu.connector';\n\nexport const PageWithMenu: SFC<{}> = ({\n  children\n}) => (\n  <PageLayout>\n    <HeaderConnecter />\n    <SeasonMenuConnecter />\n    { children }\n  </PageLayout>\n);\n","import React, { SFC } from 'react';\n\nimport './SearchBar.scss';\n\nimport { ISearchBarProps } from './SearchBar.interface';\nimport {\n  Input\n} from '../../components-elements';\n\nimport {\n  BareButton,\n  CrossIcon,\n  MagnifyingGlassIcon\n} from '../../components-elements';\n\nconst getSearchBarClassName = (isSearchBarVisible: boolean) => (\n  'c-search-bar' +\n    (\n      isSearchBarVisible\n        ? ' c-search-bar--show-full'\n        : ''\n    )\n);\n\nconst focusOnInputIfSearchVisible = (\n  ref: HTMLDivElement | undefined,\n  isSearchBarVisible: boolean\n) => {\n  if (ref && isSearchBarVisible) {\n    const input = ref.querySelector('input');\n    if (input) {\n      input.focus();\n    }\n  }\n};\n\nexport const SearchBar: SFC<ISearchBarProps> = ({\n  isSearchBarVisible,\n  onHideSearchBar,\n  onSearchChanged,\n  onShowSearchBar\n}) => (\n  <div className={getSearchBarClassName(isSearchBarVisible)}\n    ref={\n      (ref: HTMLDivElement) => (\n        focusOnInputIfSearchVisible(ref, isSearchBarVisible)\n      )\n    }>\n    <Input className='c-search-bar__input'\n      onChange={(newSearchTerm) => onSearchChanged(newSearchTerm)}\n      placeholder='Search' />\n    {\n      isSearchBarVisible\n        ? <BareButton className='c-search-bar__search-button'\n            onClick={onHideSearchBar}>\n            <CrossIcon />\n          </BareButton>\n        : <BareButton className='c-search-bar__search-button'\n            onClick={onShowSearchBar}>\n            <MagnifyingGlassIcon />\n          </BareButton>\n    }\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  SearchBar\n} from './SearchBar';\nimport {\n  searchBarChanged,\n  selectIsSearchBarVisible,\n  showSearchBar,\n  hideSearchBar\n} from '@chrisb-dev/seasonal-shared';\nimport {\n  ISearchBarDispatchProps,\n  ISearchBarInputProps\n} from './SearchBar.interface';\nimport { Dispatch } from 'redux';\nimport { IState } from '../../interfaces';\n\nconst mapStateToProps = (state: IState): ISearchBarInputProps => ({\n  isSearchBarVisible: selectIsSearchBarVisible(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISearchBarDispatchProps => ({\n  onHideSearchBar: () => dispatch(hideSearchBar()),\n  onSearchChanged: (newSearchTerm: string) => (\n    dispatch((searchBarChanged(newSearchTerm)))\n  ),\n  onShowSearchBar: () => dispatch(showSearchBar())\n});\n\nexport const SearchBarConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n","import { connect } from 'react-redux';\nimport {\n  SeasonsForFood\n} from './SeasonsForFood';\nimport {\n  selectSeasonsSelectedForFood,\n  selectIsFoodDataOrBasicSeasonsLoading,\n  foodDetailsSelectSeason\n} from '@chrisb-dev/seasonal-shared';\n\nimport { IState } from '../../interfaces';\nimport {\n  ISeasonForFoodInputProps,\n  ISeasonForFoodDispatchProps\n} from './SeasonsForFood.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (\n  state: IState\n): ISeasonForFoodInputProps => ({\n  isLoading: selectIsFoodDataOrBasicSeasonsLoading(state),\n  seasonsSelectedForFood: selectSeasonsSelectedForFood(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): ISeasonForFoodDispatchProps => ({\n  onSeasonSelected: (seasonIndex: number) => (\n    dispatch(foodDetailsSelectSeason(seasonIndex))\n  )\n});\n\nexport const SeasonsForFoodConnecter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SeasonsForFood);\n","import React, { Fragment } from 'react';\n\nimport './SeasonsForFood.scss';\n\nimport {\n  TextMedium,\n  TextHeadingMedium,\n  TextSmall,\n  BareButton\n} from '../../components-elements';\n\nimport { ISeasonForFoodProps } from './SeasonsForFood.interface';\n\nexport const SeasonsForFood = ({\n  isLoading,\n  seasonsSelectedForFood,\n  onSeasonSelected\n}: ISeasonForFoodProps) => (\n  !isLoading\n    ? <Fragment>\n    <TextHeadingMedium\n      className='c-season-for-food__list-heading'>\n      When are they in season?\n    </TextHeadingMedium>\n    <div className='c-season-for-food__list'>\n      {\n        seasonsSelectedForFood && seasonsSelectedForFood.map((\n          {\n            isSelected,\n            name\n          },\n          seasonIndex\n        ) => (\n          <BareButton\n            key={name}\n            className={\n              `c-season-for-food__season` +\n                (\n                  isSelected\n                    ? ` c-season-for-food__season--selected`\n                    : ''\n                )\n              }\n            onClick={ () => onSeasonSelected(seasonIndex) }>\n            <TextMedium>\n              { name.substring(0, 3) }\n            </TextMedium>\n          </BareButton>\n        ))\n      }\n    </div>\n    <div\n      className={`c-season-food__in-season-key ` +\n        `c-season-food__in-season-key--in-season`\n      }>\n      <TextSmall className='c-season-food__in-season-key__text'>\n        In season\n      </TextSmall>\n    </div>\n    <div\n      className='c-season-food__in-season-key'>\n      <TextSmall className='c-season-food__in-season-key__text'>\n        Not in season\n      </TextSmall>\n    </div>\n  </Fragment>\n  : null\n);\n","import { connect } from 'react-redux';\nimport {\n  ViewWebAppVersion\n} from './ViewWebAppVersion';\nimport {\n  goToWebVersion\n} from '../../store';\nimport { IViewWebAppVersionDispatchProps } from './ViewWebAppVersion.interface';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IViewWebAppVersionDispatchProps => ({\n  onGoToWebVersion: () => dispatch((goToWebVersion()))\n});\n\nexport const ViewWebAppVersionConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewWebAppVersion);\n","import React, { SFC } from 'react';\n\nimport {\n  PrimaryButton\n} from '../../components-elements';\n\nimport {\n  IViewWebAppVersionDispatchProps\n} from './ViewWebAppVersion.interface';\n\nexport const ViewWebAppVersion: SFC<IViewWebAppVersionDispatchProps> = ({\n  onGoToWebVersion\n}) => (\n  <PrimaryButton onClick={onGoToWebVersion}>\n    To web version\n  </PrimaryButton>\n);\n","import React, { SFC } from 'react';\n\nimport './ViewAppLinks.scss';\n\nimport {\n  AndroidAppDownload\n} from '../AndroidAppDownload/AndroidAppDownload';\n\nimport {\n  ViewWebAppVersionConnector\n} from '../ViewWebAppVersion/ViewWebAppVersion.connector';\n\nexport const ViewAppLinks: SFC<{}> = () => (\n  <div className='c-view-app-links'>\n    <AndroidAppDownload />\n    <ViewWebAppVersionConnector />\n  </div>\n);\n","import React, { SFC } from 'react';\n\nimport './WhyEatSeasonal.scss';\n\nimport {\n  TextHeadingLarge\n} from '../../components-elements';\n\nimport {\n  ISummaryColumnList,\n  SummaryColumnList\n} from '../../components-layout';\n\nimport columns from './why-eat-seasonal-columns.json';\n\nconst summaryColumns: ISummaryColumnList = {\n  columns\n};\n\nexport const WhyEatSeasonal: SFC<{}> = ({}) => (\n  <div className='c-why-eat-seasonal'>\n    <h2 className='c-why-eat-seasonal__heading'>\n      <TextHeadingLarge>\n        Why Eat Seasonal?\n      </TextHeadingLarge>\n    </h2>\n    <SummaryColumnList {...summaryColumns} />\n  </div>\n);\n","import { connect } from 'react-redux';\nimport {\n  AllSeasons\n} from './AllSeasons';\n\nimport { IState } from '../../interfaces';\nimport {\n  IAllSeasonsInputProps,\n  IAllSeasonsDispatchProps\n} from './AllSeasons.interface';\nimport { Dispatch } from 'redux';\nimport {\n  foodItemClicked,\n  selectAllSeasonsVisibleFoodData,\n  selectIsAllSeasonsWithFoodDataLoading,\n  increaseNumberOfAllFoodSeasonsInView,\n  selectHasMoreSeasonsInAllSeasonsView\n} from '@chrisb-dev/seasonal-shared';\n\nconst mapStateToProps = (\n  state: IState\n): IAllSeasonsInputProps => ({\n  hasMoreSeasonsInAllSeasonsView: selectHasMoreSeasonsInAllSeasonsView(state),\n  isLoading: selectIsAllSeasonsWithFoodDataLoading(state),\n  seasons: selectAllSeasonsVisibleFoodData(state)\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): IAllSeasonsDispatchProps => ({\n  increaseNumberOfAllFoodSeasonsInView: () => (\n    dispatch(increaseNumberOfAllFoodSeasonsInView())\n  ),\n  onFoodClick: (foodItemId: string) => dispatch(foodItemClicked(foodItemId))\n});\n\nexport const AllSeasonsConnector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AllSeasons);\n","import React, { SFC } from 'react';\nimport './AllSeasons.scss';\nimport {\n  IAllSeasonsProps\n} from './AllSeasons.interface';\nimport { SeasonNameView, ImageGrid } from '../../components-layout';\nimport { LoadingSpinner } from '../../components-elements';\n\nimport InfiniteScroll from 'react-infinite-scroller';\n\nexport const AllSeasons: SFC<IAllSeasonsProps> = ({\n  isLoading,\n  onFoodClick,\n  seasons,\n  hasMoreSeasonsInAllSeasonsView,\n  increaseNumberOfAllFoodSeasonsInView\n}) => (\n  isLoading\n  ? <div className='c-all-seasons__loading-spinner-wrapper'>\n    <LoadingSpinner />\n  </div>\n  : <div className='c-all-seasons'>\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={increaseNumberOfAllFoodSeasonsInView}\n      hasMore={hasMoreSeasonsInAllSeasonsView}\n      loader={<LoadingSpinner key='all-seasons-spinner' />}>\n    {\n      seasons && seasons.map(({ name, food }) => (\n        <div className='c-all-seasons__season' key={name}>\n          <SeasonNameView name={name}></SeasonNameView>\n          <ImageGrid data={food}\n            onClick={onFoodClick} skipAnimation={true} />\n        </div>\n      ))\n    }\n    </InfiniteScroll>\n  </div>\n);\n","import React from 'react';\n\nimport './FoodDetailsPage.scss';\n\nimport {\n  FoodDetailsLoaderConnecter,\n  FoodDetailsTopSectionConnecter,\n  PageWithMenu,\n  SeasonsForFoodConnecter\n} from '../../components-main';\n\nexport const FoodDetailsPage = () => (\n  <PageWithMenu>\n    <div className='c-food-details-page__main'>\n      <FoodDetailsTopSectionConnecter />\n      <FoodDetailsLoaderConnecter />\n      <SeasonsForFoodConnecter />\n    </div>\n  </PageWithMenu>\n);\n","import React from 'react';\n\nimport './FoodTablePage.scss';\n\nimport {\n  BottomTabsConnecter,\n  CurrentSeasonNameConnecter,\n  FoodTableConnecter,\n  PageWithMenu\n} from '../../components-main';\n\nexport const FoodTablePage = () => (\n  <PageWithMenu>\n    <div className='c-food-table-page__main'>\n      <CurrentSeasonNameConnecter />\n      <FoodTableConnecter />\n      <BottomTabsConnecter />\n    </div>\n  </PageWithMenu>\n);\n","import React from 'react';\n\nimport './IntroPage.scss';\n\nimport {\n  AboutEatSeasonal,\n  ViewAppLinks,\n  WhyEatSeasonal\n} from '../../components-main';\n\nexport const IntroPage = () => (\n  <div className='c-intro-page'>\n    <div className='c-intro-page__top-section'>\n      <img className='c-intro-page__splash-image' src='/splash.png'/>\n      <ViewAppLinks />\n    </div>\n    <AboutEatSeasonal />\n    <WhyEatSeasonal />\n    <div className='c-intro-page__mobile-extra-app-links'>\n      <ViewAppLinks />\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { PageWithMenu, AllSeasonsConnector } from '../../components-main';\n\nexport const AllSeasonsPage = () => (\n  <PageWithMenu>\n    <AllSeasonsConnector />\n  </PageWithMenu>\n);\n","import React from 'react';\n\nimport {\n  IntroPage,\n  FoodTablePage,\n  FoodDetailsPage,\n  AllSeasonsPage\n} from '../components-pages';\nimport './App.scss';\n\nimport { Provider } from 'react-redux';\nimport { store, storeHistory } from '../store/reducers';\n\nimport { Route, Switch } from 'react-router';\n\nimport {\n  FOOD_TABLE_URL,\n  LANDING_URL,\n  FOOD_DETAILS_URL,\n  ALL_SEASONS_URL\n} from '../const';\n\nimport { ConnectedRouter } from 'connected-react-router';\n\nexport const App = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={storeHistory}>\n      <div className='c-app'>\n        <Switch>\n          <Route path={LANDING_URL} component={IntroPage} exact />\n          <Route path={FOOD_TABLE_URL} component={FoodTablePage} />\n          <Route path={`${FOOD_DETAILS_URL}/:id`} component={FoodDetailsPage} />\n          <Route path={ALL_SEASONS_URL} component={AllSeasonsPage} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport './styles/index.scss';\nimport { App } from './components-app/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nif (rootElement && rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}